{
  "contractName": "TheButton",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "active",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "nextCampaignBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timeLeft",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "revenueFraction",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "latestData",
      "outputs": [
        {
          "name": "price",
          "type": "uint256"
        },
        {
          "name": "jackpot",
          "type": "uint256"
        },
        {
          "name": "char",
          "type": "uint256"
        },
        {
          "name": "deadline",
          "type": "uint64"
        },
        {
          "name": "presses",
          "type": "uint256"
        },
        {
          "name": "lastPresser",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "latestParams",
      "outputs": [
        {
          "name": "jackF",
          "type": "uint256"
        },
        {
          "name": "revF",
          "type": "uint256"
        },
        {
          "name": "charF",
          "type": "uint256"
        },
        {
          "name": "priceMul",
          "type": "uint256"
        },
        {
          "name": "nParam",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "campaignID",
          "type": "uint256"
        }
      ],
      "name": "winner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalPresses",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "deadline",
      "outputs": [
        {
          "name": "",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "n",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalETH",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "donateJackpot",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawRevenue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_charity",
          "type": "address"
        }
      ],
      "name": "setCharityBeneficiary",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "presses",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "jackpot",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stopped",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "jackpotFraction",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "charityBeneficiary",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "authority_",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "redeemSurplusERC20",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "charityBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "redeemSurplusETH",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "totalTokenBalances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_guy",
          "type": "address"
        }
      ],
      "name": "hasWon",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "revenueBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "startingPrice_",
          "type": "uint256"
        },
        {
          "name": "priceMul_",
          "type": "uint256"
        },
        {
          "name": "period_",
          "type": "uint32"
        },
        {
          "name": "n_",
          "type": "uint32"
        }
      ],
      "name": "setButtonParams",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "withdrawBaseERC20",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalWon",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "baseTokenBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalRevenue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawJackpot",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseETHBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "priceMultiplier",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalCharity",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startingPrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawBaseETH",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_devF",
          "type": "uint256"
        },
        {
          "name": "_charityF",
          "type": "uint256"
        },
        {
          "name": "_newCampF",
          "type": "uint256"
        }
      ],
      "name": "setAccountingParams",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastCampaignID",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastPresser",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "period",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "charityFraction",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "callData",
          "type": "bytes"
        }
      ],
      "name": "sendCharityETH",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalsData",
      "outputs": [
        {
          "name": "_totalWon",
          "type": "uint256"
        },
        {
          "name": "_totalCharity",
          "type": "uint256"
        },
        {
          "name": "_totalPresses",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastWinner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "by",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "paid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "timeLeft",
          "type": "uint64"
        }
      ],
      "name": "Pressed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "startingETH",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "period",
          "type": "uint32"
        },
        {
          "indexed": false,
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "Started",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "guy",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "jackpot",
          "type": "uint256"
        }
      ],
      "name": "Winrar",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newCharityBeneficiary",
          "type": "address"
        }
      ],
      "name": "CharityChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "startingPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "n",
          "type": "uint32"
        },
        {
          "indexed": false,
          "name": "period",
          "type": "uint32"
        },
        {
          "indexed": false,
          "name": "priceMul",
          "type": "uint256"
        }
      ],
      "name": "ButtonParamsChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "devFraction",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "charityFraction",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "jackpotFraction",
          "type": "uint256"
        }
      ],
      "name": "AccountingParamsChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ETHDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ETHSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "fromAccount",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "toAccount",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ETHTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "fromAccount",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "toAccount",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TokenTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TokenDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TokenSent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "authority",
          "type": "address"
        }
      ],
      "name": "LogSetAuthority",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "LogSetOwner",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "press",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "start",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "stop",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalizeLastCampaign",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "finalizeCampaign",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x7f42617365000000000000000000000000000000000000000000000000000000006080819052600060a08190526004918255600581905566071afd498d0000600b55670eb5e06245ea0000600c55600d805463ffffffff191690921767ffffffff0000000019166507080000000017909155662386f26fc10000600e5567013fbe85edc90000600f5566b1a2bc2ec50000601055670bcbce7f1b1500006011557f526576656e75650000000000000000000000000000000000000000000000000060c081905260e082905260135560148190557f4e6578742043616d706169676e0000000000000000000000000000000000000061010081905261012082905260165560178190556101806040527f4368617269747900000000000000000000000000000000000000000000000000610140819052610160829052601955601a5534801561014c57600080fd5b5060018054600160a060020a031916339081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a26020805460ff19166001179055613525806101a76000396000f30060806040526004361061026e5763ffffffff60e060020a60003504166302fb0c5e811461027857806307da68f5146102a15780630b781385146102b65780631300a6d1146102dd578063136dbbab146102f257806313af403514610307578063142bc2ae1461032857806314beb3a3146103825780631cbeae5e146103c25780632741876a146103f657806329dcb0cf1461040b5780632e52d6061461043d57806336bdee74146104525780634ec4878b146104675780634f573cb21461047c5780635b3725321461026e57806361c3b7f114610491578063682e60a9146104b25780636b31ee01146104c75780636b5ca27d146104dc57806375f12b21146104f4578063772506bb1461050957806377c713961461051e5780637a9e5e4b146105335780638da5cb5b1461055457806391b7d3e01461056957806399b8a3f01461058a578063a0129b001461059f578063a035b1fe146105b4578063a2d2dbe2146105c9578063a52b2b88146105ea578063a6cfbb7f1461060b578063a78adfec14610620578063ae1803371461064a578063b3ff277d1461066b578063b80e63df14610680578063be9a6555146106a1578063bf2d9e0b146106a9578063bf7e214f146106be578063c0b3870a146106d3578063cb146814146106e8578063d50cb88b146106fd578063d608b3b214610712578063d6fbf20214610727578063de47e0bf1461073c578063debe1c6914610751578063e99a7dca1461076f578063ec18ca9c14610784578063ed2c92b114610799578063ef78d4fd146107ae578063f4aac034146107c3578063f63ef744146107d8578063f8b45b0614610831578063fe18818414610864575b610276610879565b005b34801561028457600080fd5b5061028d61098b565b604080519115158252519081900360200190f35b3480156102ad57600080fd5b506102766109de565b3480156102c257600080fd5b506102cb610a0e565b60408051918252519081900360200190f35b3480156102e957600080fd5b506102cb610ab9565b3480156102fe57600080fd5b506102cb610b0f565b34801561031357600080fd5b50610276600160a060020a0360043516610b51565b34801561033457600080fd5b5061033d610bcf565b6040805196875260208701959095528585019390935267ffffffffffffffff90911660608501526080840152600160a060020a031660a0830152519081900360c00190f35b34801561038e57600080fd5b50610397610eda565b6040805195865260208601949094528484019290925260608401526080830152519081900360a00190f35b3480156103ce57600080fd5b506103da600435611161565b60408051600160a060020a039092168252519081900360200190f35b34801561040257600080fd5b506102cb611195565b34801561041757600080fd5b50610420611214565b6040805167ffffffffffffffff9092168252519081900360200190f35b34801561044957600080fd5b506102cb611252565b34801561045e57600080fd5b506102cb6112ab565b34801561047357600080fd5b506102766112b1565b34801561048857600080fd5b5061027661133c565b34801561049d57600080fd5b50610276600160a060020a036004351661137b565b3480156104be57600080fd5b506102cb611465565b3480156104d357600080fd5b506102cb6114a7565b3480156104e857600080fd5b5061027660043561157e565b34801561050057600080fd5b5061028d6115bd565b34801561051557600080fd5b506102cb6115c6565b34801561052a57600080fd5b506103da611608565b34801561053f57600080fd5b50610276600160a060020a0360043516611617565b34801561056057600080fd5b506103da611691565b34801561057557600080fd5b50610276600160a060020a03600435166116a0565b34801561059657600080fd5b506102cb6117ba565b3480156105ab57600080fd5b50610276611885565b3480156105c057600080fd5b506102cb6118db565b3480156105d557600080fd5b506102cb600160a060020a036004351661191d565b3480156105f657600080fd5b506102cb600160a060020a036004351661192f565b34801561061757600080fd5b506102cb61194d565b34801561062c57600080fd5b5061027660043560243563ffffffff60443581169060643516611a03565b34801561065657600080fd5b50610276600160a060020a0360043516611b6b565b34801561067757600080fd5b506102cb611bb5565b34801561068c57600080fd5b506102cb600160a060020a0360043516611bbb565b610276611bd6565b3480156106b557600080fd5b506102cb611ca5565b3480156106ca57600080fd5b506103da611d0c565b3480156106df57600080fd5b50610276611d1b565b3480156106f457600080fd5b506102cb611da1565b34801561070957600080fd5b506102cb611da7565b34801561071e57600080fd5b506102cb611de9565b34801561073357600080fd5b506102cb611e50565b34801561074857600080fd5b50610276611e56565b34801561075d57600080fd5b50610276600435602435604435611e88565b34801561077b57600080fd5b506102cb612007565b34801561079057600080fd5b506103da61200d565b3480156107a557600080fd5b50610276612042565b3480156107ba57600080fd5b506102cb612080565b3480156107cf57600080fd5b506102cb6120e5565b3480156107e457600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526102769436949293602493928401919081908401838280828437509497506121279650505050505050565b34801561083d57600080fd5b50610846612167565b60408051938452602084019290925282820152519081900360600190f35b34801561087057600080fd5b506103da6122e3565b6000601f601e5481548110151561088c57fe5b90600052602060002090600b020190506108a461098b565b156108c5576108b2816123d0565b6108c08160080133346125cc565b610988565b60205460ff1615610920576040805160e560020a62461bcd02815260206004820152601160248201527f436f6e74726163742073746f7070656421000000000000000000000000000000604482015290519081900360640190fd5b60078101546d0100000000000000000000000000900460ff1615156109485761094881612643565b610950612931565b601f601e5481548110151561096157fe5b90600052602060002090600b0201905061097a816123d0565b6109888160080133346125cc565b50565b601f54600090151561099f575060006109db565b42601f601e548154811015156109b157fe5b60009182526020909120600b909102016006015460a060020a900467ffffffffffffffff16101590505b90565b6109f433600035600160e060020a031916612c4e565b15156109ff57600080fd5b6020805460ff19166001179055565b6000601f601e54815481101515610a2157fe5b90600052602060002090600b0201600701600d9054906101000a900460ff161515610aa457610a9d601f601e54815481101515610a5a57fe5b90600052602060002090600b020160050154601f601e54815481101515610a7d57fe5b600091825260209091206009600b9092020101549063ffffffff612d5716565b90506109db565b600f54601754610a9d9163ffffffff612d5716565b6000610ac361098b565b15610b075742601f601e54815481101515610ada57fe5b60009182526020909120600b909102016006015460a060020a900467ffffffffffffffff160390506109db565b5060006109db565b6000610b1961098b565b15610b4857601f601e54815481101515610b2f57fe5b90600052602060002090600b02016002015490506109db565b50600f546109db565b610b6733600035600160e060020a031916612c4e565b1515610b7257600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290556040519116907fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a250565b60008060008060008030600160a060020a031663a035b1fe6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610c1657600080fd5b505af1158015610c2a573d6000803e3d6000fd5b505050506040513d6020811015610c4057600080fd5b5051604080517f6b31ee0100000000000000000000000000000000000000000000000000000000815290519197503091636b31ee01916004808201926020929091908290030181600087803b158015610c9857600080fd5b505af1158015610cac573d6000803e3d6000fd5b505050506040513d6020811015610cc257600080fd5b5051604080517f99b8a3f0000000000000000000000000000000000000000000000000000000008152905191965030916399b8a3f0916004808201926020929091908290030181600087803b158015610d1a57600080fd5b505af1158015610d2e573d6000803e3d6000fd5b505050506040513d6020811015610d4457600080fd5b5051604080517f29dcb0cf000000000000000000000000000000000000000000000000000000008152905191955030916329dcb0cf916004808201926020929091908290030181600087803b158015610d9c57600080fd5b505af1158015610db0573d6000803e3d6000fd5b505050506040513d6020811015610dc657600080fd5b5051604080517f682e60a90000000000000000000000000000000000000000000000000000000081529051919450309163682e60a9916004808201926020929091908290030181600087803b158015610e1e57600080fd5b505af1158015610e32573d6000803e3d6000fd5b505050506040513d6020811015610e4857600080fd5b5051604080517fec18ca9c0000000000000000000000000000000000000000000000000000000081529051919350309163ec18ca9c916004808201926020929091908290030181600087803b158015610ea057600080fd5b505af1158015610eb4573d6000803e3d6000fd5b505050506040513d6020811015610eca57600080fd5b5051959694959394929391929050565b600080600080600030600160a060020a031663772506bb6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610f2057600080fd5b505af1158015610f34573d6000803e3d6000fd5b505050506040513d6020811015610f4a57600080fd5b5051604080517f136dbbab0000000000000000000000000000000000000000000000000000000081529051919650309163136dbbab916004808201926020929091908290030181600087803b158015610fa257600080fd5b505af1158015610fb6573d6000803e3d6000fd5b505050506040513d6020811015610fcc57600080fd5b5051604080517ff4aac0340000000000000000000000000000000000000000000000000000000081529051919550309163f4aac034916004808201926020929091908290030181600087803b15801561102457600080fd5b505af1158015611038573d6000803e3d6000fd5b505050506040513d602081101561104e57600080fd5b5051604080517fd50cb88b0000000000000000000000000000000000000000000000000000000081529051919450309163d50cb88b916004808201926020929091908290030181600087803b1580156110a657600080fd5b505af11580156110ba573d6000803e3d6000fd5b505050506040513d60208110156110d057600080fd5b5051604080517f2e52d60600000000000000000000000000000000000000000000000000000000815290519193503091632e52d606916004808201926020929091908290030181600087803b15801561112857600080fd5b505af115801561113c573d6000803e3d6000fd5b505050506040513d602081101561115257600080fd5b50519495939492939192919050565b6000601f8281548110151561117257fe5b60009182526020909120600b9091020160060154600160a060020a031692915050565b6000601f601e548154811015156111a857fe5b90600052602060002090600b0201600701600d9054906101000a900460ff16151561120b57610a9d601f601e548154811015156111e157fe5b600091825260209091206007600b909202010154600a549064ffffffffff1663ffffffff612d8e16565b50600a546109db565b6000601f601e5481548110151561122757fe5b90600052602060002090600b020160060160149054906101000a900467ffffffffffffffff16905090565b600061125c61098b565b1561129c57601f601e5481548110151561127257fe5b60009182526020909120600b909102016007015465010000000000900463ffffffff1690506109db565b50600d5463ffffffff166109db565b60025481565b336000908152601c602052604081206001015411611319576040805160e560020a62461bcd02815260206004820152601260248201527f4e6f7468696e6720746f20646f6e617465210000000000000000000000000000604482015290519081900360640190fd5b336000908152601c60205260409020600181015461133a9190601990612d9e565b565b61135233600035600160e060020a031916612c4e565b151561135d57600080fd5b60015460145461133a91601391600160a060020a0390911690612e21565b61139133600035600160e060020a031916612c4e565b151561139c57600080fd5b60008035600160e060020a0319168152601d60205260409020546277f8809042906113c79083612d8e565b11156113d257600080fd5b60008035600160e060020a0319168152601d60205260409020429055600160a060020a038216151561140357600080fd5b60128054600160a060020a03841673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517fe9bff25f57a144aa43858ad7e8e92a992af00ce7a2704f116861b96000f457ec9181900360200190a15050565b600061146f61098b565b15610b0757601f601e5481548110151561148557fe5b600091825260209091206007600b90920201015464ffffffffff1690506109db565b60006114b161098b565b156114ed57610a9d601f601e548154811015156114ca57fe5b90600052602060002090600b020160040154601f601e54815481101515610a7d57fe5b601f601e548154811015156114fe57fe5b90600052602060002090600b0201600701600d9054906101000a900460ff16151561156957610a9d601f601e5481548110151561153757fe5b90600052602060002090600b02016005015461155d601f601e548154811015156114ca57fe5b9063ffffffff612d5716565b601154601754610a9d9163ffffffff612d5716565b60205460009060ff16151561159257600080fd5b601f8054839081106115a057fe5b90600052602060002090600b020190506115b981612643565b5050565b60205460ff1681565b60006115d061098b565b156115ff57601f601e548154811015156115e657fe5b90600052602060002090600b02016004015490506109db565b506011546109db565b601254600160a060020a031681565b61162d33600035600160e060020a031916612c4e565b151561163857600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03838116919091178083556040519116917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b600154600160a060020a031681565b6000806116b933600035600160e060020a031916612c4e565b15156116c457600080fd5b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a038516916370a082319160248083019260209291908290030181600087803b15801561172557600080fd5b505af1158015611739573d6000803e3d6000fd5b505050506040513d602081101561174f57600080fd5b5051600160a060020a03841660009081526003602052604090205490925061177e90839063ffffffff612f3016565b905061178c60048483612f40565b600160a060020a0383166000908152600660205260409020546117b590600490859033906130ce565b505050565b60006117c461098b565b1561180057610a9d601f601e548154811015156117dd57fe5b90600052602060002090600b020160030154601f601e54815481101515610a7d57fe5b601f601e5481548110151561181157fe5b90600052602060002090600b0201600701600d9054906101000a900460ff16151561187057610a9d601f601e5481548110151561184a57fe5b90600052602060002090600b02016005015461155d601f601e548154811015156117dd57fe5b601054601754610a9d9163ffffffff612d5716565b600061189d33600035600160e060020a031916612c4e565b15156118a857600080fd5b6002546118bd9030319063ffffffff612f3016565b90506118ca6004826132aa565b610988600433600460010154612e21565b60006118e561098b565b1561191457601f601e548154811015156118fb57fe5b90600052602060002090600b02016000015490506109db565b50600b546109db565b60036020526000908152604090205481565b600160a060020a03166000908152601c602052604090206001015490565b600061195761098b565b1561199357610a9d601f601e5481548110151561197057fe5b90600052602060002090600b020160020154601f601e54815481101515610a7d57fe5b601f601e548154811015156119a457fe5b90600052602060002090600b0201600701600d9054906101000a900460ff161515610aa457610a9d601f601e548154811015156119dd57fe5b90600052602060002090600b02016005015461155d601f601e5481548110151561197057fe5b611a1933600035600160e060020a031916612c4e565b1515611a2457600080fd5b8364e8d4a51000678ac7230489e80000818310158015611a445750808311155b1515611a4f57600080fd5b85670de0b6b3a7640000678ac7230489e80000818310801590611a725750808311155b1515611a7d57600080fd5b8763ffffffff16601e62093a80818310158015611a9a5750808311155b1515611aa557600080fd5b8c600b819055508b600c819055508a600d60046101000a81548163ffffffff021916908363ffffffff16021790555089600d60006101000a81548163ffffffff021916908363ffffffff1602179055507fba0488b18639349657ed3fa0cacf2d3fd8352aad74cf78575306bca3535688938d8b8d8f604051808581526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff16815260200182815260200194505050505060405180910390a150505050505050505050505050565b611b8133600035600160e060020a031916612c4e565b1515611b8c57600080fd5b600160a060020a03811660009081526006602052604090205461098890600490839033906130ce565b60095481565b600160a060020a031660009081526006602052604090205490565b6000611bee33600035600160e060020a031916612c4e565b1515611bf957600080fd5b60205460ff161515611c0a57600080fd5b6020805460ff19169055601f541561094857601f601e54815481101515611c2d57fe5b90600052602060002090600b0201905080600701600d9054906101000a900460ff161515610948576040805160e560020a62461bcd02815260206004820152601c60248201527f4c6173742063616d706169676e206e6f742066696e616c697a65642100000000604482015290519081900360640190fd5b6000601f601e54815481101515611cb857fe5b90600052602060002090600b0201600701600d9054906101000a900460ff161515611d0357610a9d611cf4601f601e5481548110151561197057fe5b6007549063ffffffff612d8e16565b506007546109db565b600054600160a060020a031681565b336000908152601c602052604081206001015411611d83576040805160e560020a62461bcd02815260206004820152601460248201527f4e6f7468696e6720746f20776974686472617721000000000000000000000000604482015290519081900360640190fd5b336000818152601c60205260409020600181015461133a9290612e21565b60055490565b6000611db161098b565b15611de057601f601e54815481101515611dc757fe5b90600052602060002090600b02016001015490506109db565b50600c546109db565b6000601f601e54815481101515611dfc57fe5b90600052602060002090600b0201600701600d9054906101000a900460ff161515611e4757610a9d611e38601f601e548154811015156117dd57fe5b6008549063ffffffff612d8e16565b506008546109db565b600b5481565b611e6c33600035600160e060020a031916612c4e565b1515611e7757600080fd5b61133a600433600460010154612e21565b611e9e33600035600160e060020a031916612c4e565b1515611ea957600080fd5b611ec981611ebd858563ffffffff612d8e16565b9063ffffffff612d8e16565b6000670de0b6b3a7640000818310158015611ee45750808311155b1515611eef57600080fd5b60008035600160e060020a0319168152601d602052604090205462127500904290611f1a9083612d8e565b1115611f2557600080fd5b60008035600160e060020a0319168152601d60205260409020429055670de0b6b3a7640000861115611f5657600080fd5b6702c68af0bb140000871115611f6b57600080fd5b67016345785d8a0000851115611f8057600080fd5b600f8790556010869055600e859055611fb985611fad8881670de0b6b3a76400008c63ffffffff612f3016565b9063ffffffff612f3016565b6011819055604080518981526020810189905280820192909252517f0b22d042ca4d52f7ed18250a188ec6ea8d8be78595e40514596b8d768e4564689181900360600190a150505050505050565b601e5481565b6000601f601e5481548110151561202057fe5b600091825260209091206006600b909202010154600160a060020a0316905090565b60205460009060ff16151561205657600080fd5b601f601e5481548110151561206757fe5b90600052602060002090600b0201905061098881612643565b600061208a61098b565b156120ce57601f601e548154811015156120a057fe5b60009182526020909120600b90910201600701546901000000000000000000900463ffffffff1690506109db565b50600d54640100000000900463ffffffff166109db565b60006120ef61098b565b1561211e57601f601e5481548110151561210557fe5b90600052602060002090600b02016003015490506109db565b506010546109db565b61213d33600035600160e060020a031916612c4e565b151561214857600080fd5b601254601a5461098891601991600160a060020a0390911690846132d5565b600080600030600160a060020a031663b3ff277d6040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156121aa57600080fd5b505af11580156121be573d6000803e3d6000fd5b505050506040513d60208110156121d457600080fd5b5051604080517fd608b3b20000000000000000000000000000000000000000000000000000000081529051919450309163d608b3b2916004808201926020929091908290030181600087803b15801561222c57600080fd5b505af1158015612240573d6000803e3d6000fd5b505050506040513d602081101561225657600080fd5b5051604080517f2741876a00000000000000000000000000000000000000000000000000000000815290519193503091632741876a916004808201926020929091908290030181600087803b1580156122ae57600080fd5b505af11580156122c2573d6000803e3d6000fd5b505050506040513d60208110156122d857600080fd5b505192939192919050565b601f5460009015156122f7575060006109db565b6122ff61098b565b156123855730600160a060020a0316631cbeae5e6001601e54036040518263ffffffff1660e060020a02815260040180828152602001915050602060405180830381600087803b15801561235257600080fd5b505af1158015612366573d6000803e3d6000fd5b505050506040513d602081101561237c57600080fd5b505190506109db565b30600160a060020a0316631cbeae5e601e546040518263ffffffff1660e060020a02815260040180828152602001915050602060405180830381600087803b15801561235257600080fd5b60068101544260a060020a90910467ffffffffffffffff16101561243e576040805160e560020a62461bcd02815260206004820152600f60248201527f416674657220646561646c696e65210000000000000000000000000000000000604482015290519081900360640190fd5b8054341015612497576040805160e560020a62461bcd02815260206004820152601160248201527f4e6f7420656e6f7567682076616c756521000000000000000000000000000000604482015290519081900360640190fd5b60078101805464ffffffffff198116600164ffffffffff92831601821617918290556006830180543373ffffffffffffffffffffffffffffffffffffffff1990911617905565010000000000820463ffffffff1691168115156124f657fe5b0664ffffffffff166000141561251f576001810154815461251c9163ffffffff612d5716565b81555b6006810154604080513381523460208201524267ffffffffffffffff60a060020a90940484160390921682820152517fdffc821040ac850d3cdb1e8c2d587ab1312ed7267098abadf3fd9137172c51c89181900360600190a1600781015461259f90429063ffffffff6901000000000000000000909104811690612d8e16565b8160060160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050565b60018301546125e1908263ffffffff612d8e16565b60018401556002546125f9908263ffffffff612d8e16565b6002558254604080518381529051600160a060020a03851692917f8534743902a2fb19639aba9d7882a1a9b06d7a841874192da0738ce3973db0ae919081900360200190a3505050565b60068101546000904260a060020a90910467ffffffffffffffff16106126b3576040805160e560020a62461bcd02815260206004820152601060248201527f4265666f726520646561646c696e652100000000000000000000000000000000604482015290519081900360640190fd5b60078201546d0100000000000000000000000000900460ff1615612721576040805160e560020a62461bcd02815260206004820152601260248201527f416c72656164792066696e616c697a6564210000000000000000000000000000604482015290519081900360640190fd5b600782015464ffffffffff16156128ca575060098101546006820154600160a060020a03166000908152601c60205260409020600483015461277891600885019161277390859063ffffffff612d5716565b612d9e565b6006820154600160a060020a03166000818152601c602052604090205560048201546127be906127af90839063ffffffff612d5716565b6009549063ffffffff612d8e16565b60095560028201546127e390600884019060139061277390859063ffffffff612d5716565b6127fd611cf4836002015483612d5790919063ffffffff16565b600755600382015461282290600884019060199061277390859063ffffffff612d5716565b61283c611e38836003015483612d5790919063ffffffff16565b6008556007820154600a5461285d9164ffffffffff1663ffffffff612d8e16565b600a55600682015460048301547f56b84851a1cd72311b185b7510e0e8d5aa69f8755dcc43463ebfe959bb1614f891600160a060020a0316906128a790849063ffffffff612d5716565b60408051600160a060020a03909316835260208301919091528051918290030190a15b60205460ff16156128f0576128eb8260080160048460080160010154612d9e565b612906565b6129068260080160168460080160010154612d9e565b5060070180546dff0000000000000000000000000019166d0100000000000000000000000000179055565b60008061293c61098b565b15612991576040805160e560020a62461bcd02815260206004820152601e60248201527f412063616d706169676e20697320616c72656164792072756e6e696e67210000604482015290519081900360640190fd5b670de0b6b3a76400006129bd600e54611ebd601154611ebd601054600f54612d8e90919063ffffffff16565b14612a12576040805160e560020a62461bcd02815260206004820152601860248201527f4163636f756e74696e6720697320696e636f7272656374210000000000000000604482015290519081900360640190fd5b601f805490612a24906001830161345c565b9150601f82815481101515612a3557fe5b60009182526020909120601e849055600b8054920201908155600c546001820155600f54600282015560105460038201556011546004820155600e546005820155600d54909150612a9990429063ffffffff640100000000909104811690612d8e16565b6006820180547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff1660a060020a67ffffffffffffffff9390931692909202919091179055600d805460078301805468ffffffff0000000000191663ffffffff92831665010000000000021780825592546cffffffff00000000000000000019909316640100000000909304909116690100000000000000000002919091179055601e54604080517f546f74616c00000000000000000000000000000000000000000000000000000060208083019190915260258083019490945282518083039094018452604590910191829052825182918401908083835b60208310612bb05780518252601f199092019160209182019101612b91565b5181516020939093036101000a6000190180199091169216919091179052604051920182900390912060088501908155601754612bf4945060169350909150612d9e565b6009810154600d54601e546040805193845264010000000090920463ffffffff16602084015282820152517f6a2b8b9a3942a8abc58fb4ae0c546618d960d0bc856f995b545464becc5be272916060908290030190a15050565b6000600160a060020a038316301415612c6957506001612d51565b600154600160a060020a0384811691161415612c8757506001612d51565b600054600160a060020a03161515612ca157506000612d51565b60008054604080517fb7009613000000000000000000000000000000000000000000000000000000008152600160a060020a038781166004830152306024830152600160e060020a0319871660448301529151919092169263b700961392606480820193602093909283900390910190829087803b158015612d2257600080fd5b505af1158015612d36573d6000803e3d6000fd5b505050506040513d6020811015612d4c57600080fd5b505190505b92915050565b6000670de0b6b3a7640000612d7d612d6f8585613434565b6706f05b59d3b20000612d8e565b811515612d8657fe5b049392505050565b80820182811015612d5157600080fd5b6001830154811115612daf57600080fd5b6001830154612dc4908263ffffffff612f3016565b600180850191909155820154612de0908263ffffffff612d8e16565b6001830155815483546040805184815290517f91394ae08f7d57415c1c2ac6886394ef2c7634274779088733b60f7504831cef9181900360200190a3505050565b60015460a060020a900460ff1615612e3857600080fd5b6001805460a060020a60ff02191660a060020a178155830154811115612e5d57600080fd5b600160a060020a0382161515612e7257600080fd5b6001830154612e87908263ffffffff612f3016565b6001840155600254612e9f908263ffffffff612f3016565b600255604051600160a060020a0383169082156108fc029083906000818181858888f19350505050158015612ed8573d6000803e3d6000fd5b508254604080518381529051600160a060020a03851692917fa3e8292cffffe79590527099bf9d852a1160f38b284cc5124afa894201c0f256919081900360200190a350506001805460a060020a60ff021916905550565b80820382811115612d5157600080fd5b60015460009060a060020a900460ff1615612f5a57600080fd5b6001805460a060020a60ff02191660a060020a179055604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a038516916370a082319160248083019260209291908290030181600087803b158015612fd157600080fd5b505af1158015612fe5573d6000803e3d6000fd5b505050506040513d6020811015612ffb57600080fd5b5051600160a060020a038416600090815260036020526040902054909150613029908363ffffffff612d8e16565b81101561303557600080fd5b600160a060020a0383166000908152600285016020526040902054613060908363ffffffff612d8e16565b600160a060020a038416600081815260028701602090815260409182902093909355865481518681529151309491927f528fa5ea862bde3887a0891407d0cc4cbe935d1dd428a0fda5624c0a256facc892908290030190a450506001805460a060020a60ff02191690555050565b60015460a060020a900460ff16156130e557600080fd5b6001805460a060020a60ff02191660a060020a179055600160a060020a038316600090815260028501602052604090205481111561312257600080fd5b600160a060020a038216151561313757600080fd5b600160a060020a0383166000908152600285016020526040902054613162908263ffffffff612f3016565b600160a060020a0384166000908152600286016020908152604080832093909355600390522054613199908263ffffffff612f3016565b600160a060020a0380851660008181526003602090815260408083209590955584517fa9059cbb0000000000000000000000000000000000000000000000000000000081529387166004850152602484018690529351919363a9059cbb936044808201949293918390030190829087803b15801561321657600080fd5b505af115801561322a573d6000803e3d6000fd5b505050506040513d602081101561324057600080fd5b5051151561324d57600080fd5b8354604080518381529051600160a060020a03808616939087169290917f920718295e8e03a7fda1fe1d8d41ba008f378b1d679ea1a5f70eca3a389a25789181900360200190a450506001805460a060020a60ff02191690555050565b6002546132bd908263ffffffff612d8e16565b303110156132ca57600080fd5b6115b98230836125cc565b60015460a060020a900460ff16156132ec57600080fd5b6001805460a060020a60ff02191660a060020a17815584015482111561331157600080fd5b600160a060020a038316151561332657600080fd5b600184015461333b908363ffffffff612f3016565b6001850155600254613353908363ffffffff612f3016565b60028190555082600160a060020a0316828260405180828051906020019080838360005b8381101561338f578181015183820152602001613377565b50505050905090810190601f1680156133bc5780820380516001836020036101000a031916815260200191505b5091505060006040518083038185875af19250505015156133dc57600080fd5b8354604080518481529051600160a060020a03861692917fa3e8292cffffe79590527099bf9d852a1160f38b284cc5124afa894201c0f256919081900360200190a350506001805460a060020a60ff02191690555050565b600081158061345157505080820282828281151561344e57fe5b04145b1515612d5157600080fd5b8154818355818111156117b5576000838152602090206117b5916109db91600b9182028101918502015b808211156134f55760008082556001820181905560028201819055600382018190556004820181905560058201819055600682018054600160e060020a03191690556007820180546dffffffffffffffffffffffffffff19169055600882018190556009820155600b01613486565b50905600a165627a7a7230582008ce6fab0236da66d568723e50358cf211834d18299dd01e5d6a0b4040fb223d0029",
  "deployedBytecode": "0x60806040526004361061026e5763ffffffff60e060020a60003504166302fb0c5e811461027857806307da68f5146102a15780630b781385146102b65780631300a6d1146102dd578063136dbbab146102f257806313af403514610307578063142bc2ae1461032857806314beb3a3146103825780631cbeae5e146103c25780632741876a146103f657806329dcb0cf1461040b5780632e52d6061461043d57806336bdee74146104525780634ec4878b146104675780634f573cb21461047c5780635b3725321461026e57806361c3b7f114610491578063682e60a9146104b25780636b31ee01146104c75780636b5ca27d146104dc57806375f12b21146104f4578063772506bb1461050957806377c713961461051e5780637a9e5e4b146105335780638da5cb5b1461055457806391b7d3e01461056957806399b8a3f01461058a578063a0129b001461059f578063a035b1fe146105b4578063a2d2dbe2146105c9578063a52b2b88146105ea578063a6cfbb7f1461060b578063a78adfec14610620578063ae1803371461064a578063b3ff277d1461066b578063b80e63df14610680578063be9a6555146106a1578063bf2d9e0b146106a9578063bf7e214f146106be578063c0b3870a146106d3578063cb146814146106e8578063d50cb88b146106fd578063d608b3b214610712578063d6fbf20214610727578063de47e0bf1461073c578063debe1c6914610751578063e99a7dca1461076f578063ec18ca9c14610784578063ed2c92b114610799578063ef78d4fd146107ae578063f4aac034146107c3578063f63ef744146107d8578063f8b45b0614610831578063fe18818414610864575b610276610879565b005b34801561028457600080fd5b5061028d61098b565b604080519115158252519081900360200190f35b3480156102ad57600080fd5b506102766109de565b3480156102c257600080fd5b506102cb610a0e565b60408051918252519081900360200190f35b3480156102e957600080fd5b506102cb610ab9565b3480156102fe57600080fd5b506102cb610b0f565b34801561031357600080fd5b50610276600160a060020a0360043516610b51565b34801561033457600080fd5b5061033d610bcf565b6040805196875260208701959095528585019390935267ffffffffffffffff90911660608501526080840152600160a060020a031660a0830152519081900360c00190f35b34801561038e57600080fd5b50610397610eda565b6040805195865260208601949094528484019290925260608401526080830152519081900360a00190f35b3480156103ce57600080fd5b506103da600435611161565b60408051600160a060020a039092168252519081900360200190f35b34801561040257600080fd5b506102cb611195565b34801561041757600080fd5b50610420611214565b6040805167ffffffffffffffff9092168252519081900360200190f35b34801561044957600080fd5b506102cb611252565b34801561045e57600080fd5b506102cb6112ab565b34801561047357600080fd5b506102766112b1565b34801561048857600080fd5b5061027661133c565b34801561049d57600080fd5b50610276600160a060020a036004351661137b565b3480156104be57600080fd5b506102cb611465565b3480156104d357600080fd5b506102cb6114a7565b3480156104e857600080fd5b5061027660043561157e565b34801561050057600080fd5b5061028d6115bd565b34801561051557600080fd5b506102cb6115c6565b34801561052a57600080fd5b506103da611608565b34801561053f57600080fd5b50610276600160a060020a0360043516611617565b34801561056057600080fd5b506103da611691565b34801561057557600080fd5b50610276600160a060020a03600435166116a0565b34801561059657600080fd5b506102cb6117ba565b3480156105ab57600080fd5b50610276611885565b3480156105c057600080fd5b506102cb6118db565b3480156105d557600080fd5b506102cb600160a060020a036004351661191d565b3480156105f657600080fd5b506102cb600160a060020a036004351661192f565b34801561061757600080fd5b506102cb61194d565b34801561062c57600080fd5b5061027660043560243563ffffffff60443581169060643516611a03565b34801561065657600080fd5b50610276600160a060020a0360043516611b6b565b34801561067757600080fd5b506102cb611bb5565b34801561068c57600080fd5b506102cb600160a060020a0360043516611bbb565b610276611bd6565b3480156106b557600080fd5b506102cb611ca5565b3480156106ca57600080fd5b506103da611d0c565b3480156106df57600080fd5b50610276611d1b565b3480156106f457600080fd5b506102cb611da1565b34801561070957600080fd5b506102cb611da7565b34801561071e57600080fd5b506102cb611de9565b34801561073357600080fd5b506102cb611e50565b34801561074857600080fd5b50610276611e56565b34801561075d57600080fd5b50610276600435602435604435611e88565b34801561077b57600080fd5b506102cb612007565b34801561079057600080fd5b506103da61200d565b3480156107a557600080fd5b50610276612042565b3480156107ba57600080fd5b506102cb612080565b3480156107cf57600080fd5b506102cb6120e5565b3480156107e457600080fd5b506040805160206004803580820135601f81018490048402850184019095528484526102769436949293602493928401919081908401838280828437509497506121279650505050505050565b34801561083d57600080fd5b50610846612167565b60408051938452602084019290925282820152519081900360600190f35b34801561087057600080fd5b506103da6122e3565b6000601f601e5481548110151561088c57fe5b90600052602060002090600b020190506108a461098b565b156108c5576108b2816123d0565b6108c08160080133346125cc565b610988565b60205460ff1615610920576040805160e560020a62461bcd02815260206004820152601160248201527f436f6e74726163742073746f7070656421000000000000000000000000000000604482015290519081900360640190fd5b60078101546d0100000000000000000000000000900460ff1615156109485761094881612643565b610950612931565b601f601e5481548110151561096157fe5b90600052602060002090600b0201905061097a816123d0565b6109888160080133346125cc565b50565b601f54600090151561099f575060006109db565b42601f601e548154811015156109b157fe5b60009182526020909120600b909102016006015460a060020a900467ffffffffffffffff16101590505b90565b6109f433600035600160e060020a031916612c4e565b15156109ff57600080fd5b6020805460ff19166001179055565b6000601f601e54815481101515610a2157fe5b90600052602060002090600b0201600701600d9054906101000a900460ff161515610aa457610a9d601f601e54815481101515610a5a57fe5b90600052602060002090600b020160050154601f601e54815481101515610a7d57fe5b600091825260209091206009600b9092020101549063ffffffff612d5716565b90506109db565b600f54601754610a9d9163ffffffff612d5716565b6000610ac361098b565b15610b075742601f601e54815481101515610ada57fe5b60009182526020909120600b909102016006015460a060020a900467ffffffffffffffff160390506109db565b5060006109db565b6000610b1961098b565b15610b4857601f601e54815481101515610b2f57fe5b90600052602060002090600b02016002015490506109db565b50600f546109db565b610b6733600035600160e060020a031916612c4e565b1515610b7257600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383811691909117918290556040519116907fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed9490600090a250565b60008060008060008030600160a060020a031663a035b1fe6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610c1657600080fd5b505af1158015610c2a573d6000803e3d6000fd5b505050506040513d6020811015610c4057600080fd5b5051604080517f6b31ee0100000000000000000000000000000000000000000000000000000000815290519197503091636b31ee01916004808201926020929091908290030181600087803b158015610c9857600080fd5b505af1158015610cac573d6000803e3d6000fd5b505050506040513d6020811015610cc257600080fd5b5051604080517f99b8a3f0000000000000000000000000000000000000000000000000000000008152905191965030916399b8a3f0916004808201926020929091908290030181600087803b158015610d1a57600080fd5b505af1158015610d2e573d6000803e3d6000fd5b505050506040513d6020811015610d4457600080fd5b5051604080517f29dcb0cf000000000000000000000000000000000000000000000000000000008152905191955030916329dcb0cf916004808201926020929091908290030181600087803b158015610d9c57600080fd5b505af1158015610db0573d6000803e3d6000fd5b505050506040513d6020811015610dc657600080fd5b5051604080517f682e60a90000000000000000000000000000000000000000000000000000000081529051919450309163682e60a9916004808201926020929091908290030181600087803b158015610e1e57600080fd5b505af1158015610e32573d6000803e3d6000fd5b505050506040513d6020811015610e4857600080fd5b5051604080517fec18ca9c0000000000000000000000000000000000000000000000000000000081529051919350309163ec18ca9c916004808201926020929091908290030181600087803b158015610ea057600080fd5b505af1158015610eb4573d6000803e3d6000fd5b505050506040513d6020811015610eca57600080fd5b5051959694959394929391929050565b600080600080600030600160a060020a031663772506bb6040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610f2057600080fd5b505af1158015610f34573d6000803e3d6000fd5b505050506040513d6020811015610f4a57600080fd5b5051604080517f136dbbab0000000000000000000000000000000000000000000000000000000081529051919650309163136dbbab916004808201926020929091908290030181600087803b158015610fa257600080fd5b505af1158015610fb6573d6000803e3d6000fd5b505050506040513d6020811015610fcc57600080fd5b5051604080517ff4aac0340000000000000000000000000000000000000000000000000000000081529051919550309163f4aac034916004808201926020929091908290030181600087803b15801561102457600080fd5b505af1158015611038573d6000803e3d6000fd5b505050506040513d602081101561104e57600080fd5b5051604080517fd50cb88b0000000000000000000000000000000000000000000000000000000081529051919450309163d50cb88b916004808201926020929091908290030181600087803b1580156110a657600080fd5b505af11580156110ba573d6000803e3d6000fd5b505050506040513d60208110156110d057600080fd5b5051604080517f2e52d60600000000000000000000000000000000000000000000000000000000815290519193503091632e52d606916004808201926020929091908290030181600087803b15801561112857600080fd5b505af115801561113c573d6000803e3d6000fd5b505050506040513d602081101561115257600080fd5b50519495939492939192919050565b6000601f8281548110151561117257fe5b60009182526020909120600b9091020160060154600160a060020a031692915050565b6000601f601e548154811015156111a857fe5b90600052602060002090600b0201600701600d9054906101000a900460ff16151561120b57610a9d601f601e548154811015156111e157fe5b600091825260209091206007600b909202010154600a549064ffffffffff1663ffffffff612d8e16565b50600a546109db565b6000601f601e5481548110151561122757fe5b90600052602060002090600b020160060160149054906101000a900467ffffffffffffffff16905090565b600061125c61098b565b1561129c57601f601e5481548110151561127257fe5b60009182526020909120600b909102016007015465010000000000900463ffffffff1690506109db565b50600d5463ffffffff166109db565b60025481565b336000908152601c602052604081206001015411611319576040805160e560020a62461bcd02815260206004820152601260248201527f4e6f7468696e6720746f20646f6e617465210000000000000000000000000000604482015290519081900360640190fd5b336000908152601c60205260409020600181015461133a9190601990612d9e565b565b61135233600035600160e060020a031916612c4e565b151561135d57600080fd5b60015460145461133a91601391600160a060020a0390911690612e21565b61139133600035600160e060020a031916612c4e565b151561139c57600080fd5b60008035600160e060020a0319168152601d60205260409020546277f8809042906113c79083612d8e565b11156113d257600080fd5b60008035600160e060020a0319168152601d60205260409020429055600160a060020a038216151561140357600080fd5b60128054600160a060020a03841673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517fe9bff25f57a144aa43858ad7e8e92a992af00ce7a2704f116861b96000f457ec9181900360200190a15050565b600061146f61098b565b15610b0757601f601e5481548110151561148557fe5b600091825260209091206007600b90920201015464ffffffffff1690506109db565b60006114b161098b565b156114ed57610a9d601f601e548154811015156114ca57fe5b90600052602060002090600b020160040154601f601e54815481101515610a7d57fe5b601f601e548154811015156114fe57fe5b90600052602060002090600b0201600701600d9054906101000a900460ff16151561156957610a9d601f601e5481548110151561153757fe5b90600052602060002090600b02016005015461155d601f601e548154811015156114ca57fe5b9063ffffffff612d5716565b601154601754610a9d9163ffffffff612d5716565b60205460009060ff16151561159257600080fd5b601f8054839081106115a057fe5b90600052602060002090600b020190506115b981612643565b5050565b60205460ff1681565b60006115d061098b565b156115ff57601f601e548154811015156115e657fe5b90600052602060002090600b02016004015490506109db565b506011546109db565b601254600160a060020a031681565b61162d33600035600160e060020a031916612c4e565b151561163857600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03838116919091178083556040519116917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b600154600160a060020a031681565b6000806116b933600035600160e060020a031916612c4e565b15156116c457600080fd5b604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a038516916370a082319160248083019260209291908290030181600087803b15801561172557600080fd5b505af1158015611739573d6000803e3d6000fd5b505050506040513d602081101561174f57600080fd5b5051600160a060020a03841660009081526003602052604090205490925061177e90839063ffffffff612f3016565b905061178c60048483612f40565b600160a060020a0383166000908152600660205260409020546117b590600490859033906130ce565b505050565b60006117c461098b565b1561180057610a9d601f601e548154811015156117dd57fe5b90600052602060002090600b020160030154601f601e54815481101515610a7d57fe5b601f601e5481548110151561181157fe5b90600052602060002090600b0201600701600d9054906101000a900460ff16151561187057610a9d601f601e5481548110151561184a57fe5b90600052602060002090600b02016005015461155d601f601e548154811015156117dd57fe5b601054601754610a9d9163ffffffff612d5716565b600061189d33600035600160e060020a031916612c4e565b15156118a857600080fd5b6002546118bd9030319063ffffffff612f3016565b90506118ca6004826132aa565b610988600433600460010154612e21565b60006118e561098b565b1561191457601f601e548154811015156118fb57fe5b90600052602060002090600b02016000015490506109db565b50600b546109db565b60036020526000908152604090205481565b600160a060020a03166000908152601c602052604090206001015490565b600061195761098b565b1561199357610a9d601f601e5481548110151561197057fe5b90600052602060002090600b020160020154601f601e54815481101515610a7d57fe5b601f601e548154811015156119a457fe5b90600052602060002090600b0201600701600d9054906101000a900460ff161515610aa457610a9d601f601e548154811015156119dd57fe5b90600052602060002090600b02016005015461155d601f601e5481548110151561197057fe5b611a1933600035600160e060020a031916612c4e565b1515611a2457600080fd5b8364e8d4a51000678ac7230489e80000818310158015611a445750808311155b1515611a4f57600080fd5b85670de0b6b3a7640000678ac7230489e80000818310801590611a725750808311155b1515611a7d57600080fd5b8763ffffffff16601e62093a80818310158015611a9a5750808311155b1515611aa557600080fd5b8c600b819055508b600c819055508a600d60046101000a81548163ffffffff021916908363ffffffff16021790555089600d60006101000a81548163ffffffff021916908363ffffffff1602179055507fba0488b18639349657ed3fa0cacf2d3fd8352aad74cf78575306bca3535688938d8b8d8f604051808581526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff16815260200182815260200194505050505060405180910390a150505050505050505050505050565b611b8133600035600160e060020a031916612c4e565b1515611b8c57600080fd5b600160a060020a03811660009081526006602052604090205461098890600490839033906130ce565b60095481565b600160a060020a031660009081526006602052604090205490565b6000611bee33600035600160e060020a031916612c4e565b1515611bf957600080fd5b60205460ff161515611c0a57600080fd5b6020805460ff19169055601f541561094857601f601e54815481101515611c2d57fe5b90600052602060002090600b0201905080600701600d9054906101000a900460ff161515610948576040805160e560020a62461bcd02815260206004820152601c60248201527f4c6173742063616d706169676e206e6f742066696e616c697a65642100000000604482015290519081900360640190fd5b6000601f601e54815481101515611cb857fe5b90600052602060002090600b0201600701600d9054906101000a900460ff161515611d0357610a9d611cf4601f601e5481548110151561197057fe5b6007549063ffffffff612d8e16565b506007546109db565b600054600160a060020a031681565b336000908152601c602052604081206001015411611d83576040805160e560020a62461bcd02815260206004820152601460248201527f4e6f7468696e6720746f20776974686472617721000000000000000000000000604482015290519081900360640190fd5b336000818152601c60205260409020600181015461133a9290612e21565b60055490565b6000611db161098b565b15611de057601f601e54815481101515611dc757fe5b90600052602060002090600b02016001015490506109db565b50600c546109db565b6000601f601e54815481101515611dfc57fe5b90600052602060002090600b0201600701600d9054906101000a900460ff161515611e4757610a9d611e38601f601e548154811015156117dd57fe5b6008549063ffffffff612d8e16565b506008546109db565b600b5481565b611e6c33600035600160e060020a031916612c4e565b1515611e7757600080fd5b61133a600433600460010154612e21565b611e9e33600035600160e060020a031916612c4e565b1515611ea957600080fd5b611ec981611ebd858563ffffffff612d8e16565b9063ffffffff612d8e16565b6000670de0b6b3a7640000818310158015611ee45750808311155b1515611eef57600080fd5b60008035600160e060020a0319168152601d602052604090205462127500904290611f1a9083612d8e565b1115611f2557600080fd5b60008035600160e060020a0319168152601d60205260409020429055670de0b6b3a7640000861115611f5657600080fd5b6702c68af0bb140000871115611f6b57600080fd5b67016345785d8a0000851115611f8057600080fd5b600f8790556010869055600e859055611fb985611fad8881670de0b6b3a76400008c63ffffffff612f3016565b9063ffffffff612f3016565b6011819055604080518981526020810189905280820192909252517f0b22d042ca4d52f7ed18250a188ec6ea8d8be78595e40514596b8d768e4564689181900360600190a150505050505050565b601e5481565b6000601f601e5481548110151561202057fe5b600091825260209091206006600b909202010154600160a060020a0316905090565b60205460009060ff16151561205657600080fd5b601f601e5481548110151561206757fe5b90600052602060002090600b0201905061098881612643565b600061208a61098b565b156120ce57601f601e548154811015156120a057fe5b60009182526020909120600b90910201600701546901000000000000000000900463ffffffff1690506109db565b50600d54640100000000900463ffffffff166109db565b60006120ef61098b565b1561211e57601f601e5481548110151561210557fe5b90600052602060002090600b02016003015490506109db565b506010546109db565b61213d33600035600160e060020a031916612c4e565b151561214857600080fd5b601254601a5461098891601991600160a060020a0390911690846132d5565b600080600030600160a060020a031663b3ff277d6040518163ffffffff1660e060020a028152600401602060405180830381600087803b1580156121aa57600080fd5b505af11580156121be573d6000803e3d6000fd5b505050506040513d60208110156121d457600080fd5b5051604080517fd608b3b20000000000000000000000000000000000000000000000000000000081529051919450309163d608b3b2916004808201926020929091908290030181600087803b15801561222c57600080fd5b505af1158015612240573d6000803e3d6000fd5b505050506040513d602081101561225657600080fd5b5051604080517f2741876a00000000000000000000000000000000000000000000000000000000815290519193503091632741876a916004808201926020929091908290030181600087803b1580156122ae57600080fd5b505af11580156122c2573d6000803e3d6000fd5b505050506040513d60208110156122d857600080fd5b505192939192919050565b601f5460009015156122f7575060006109db565b6122ff61098b565b156123855730600160a060020a0316631cbeae5e6001601e54036040518263ffffffff1660e060020a02815260040180828152602001915050602060405180830381600087803b15801561235257600080fd5b505af1158015612366573d6000803e3d6000fd5b505050506040513d602081101561237c57600080fd5b505190506109db565b30600160a060020a0316631cbeae5e601e546040518263ffffffff1660e060020a02815260040180828152602001915050602060405180830381600087803b15801561235257600080fd5b60068101544260a060020a90910467ffffffffffffffff16101561243e576040805160e560020a62461bcd02815260206004820152600f60248201527f416674657220646561646c696e65210000000000000000000000000000000000604482015290519081900360640190fd5b8054341015612497576040805160e560020a62461bcd02815260206004820152601160248201527f4e6f7420656e6f7567682076616c756521000000000000000000000000000000604482015290519081900360640190fd5b60078101805464ffffffffff198116600164ffffffffff92831601821617918290556006830180543373ffffffffffffffffffffffffffffffffffffffff1990911617905565010000000000820463ffffffff1691168115156124f657fe5b0664ffffffffff166000141561251f576001810154815461251c9163ffffffff612d5716565b81555b6006810154604080513381523460208201524267ffffffffffffffff60a060020a90940484160390921682820152517fdffc821040ac850d3cdb1e8c2d587ab1312ed7267098abadf3fd9137172c51c89181900360600190a1600781015461259f90429063ffffffff6901000000000000000000909104811690612d8e16565b8160060160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555050565b60018301546125e1908263ffffffff612d8e16565b60018401556002546125f9908263ffffffff612d8e16565b6002558254604080518381529051600160a060020a03851692917f8534743902a2fb19639aba9d7882a1a9b06d7a841874192da0738ce3973db0ae919081900360200190a3505050565b60068101546000904260a060020a90910467ffffffffffffffff16106126b3576040805160e560020a62461bcd02815260206004820152601060248201527f4265666f726520646561646c696e652100000000000000000000000000000000604482015290519081900360640190fd5b60078201546d0100000000000000000000000000900460ff1615612721576040805160e560020a62461bcd02815260206004820152601260248201527f416c72656164792066696e616c697a6564210000000000000000000000000000604482015290519081900360640190fd5b600782015464ffffffffff16156128ca575060098101546006820154600160a060020a03166000908152601c60205260409020600483015461277891600885019161277390859063ffffffff612d5716565b612d9e565b6006820154600160a060020a03166000818152601c602052604090205560048201546127be906127af90839063ffffffff612d5716565b6009549063ffffffff612d8e16565b60095560028201546127e390600884019060139061277390859063ffffffff612d5716565b6127fd611cf4836002015483612d5790919063ffffffff16565b600755600382015461282290600884019060199061277390859063ffffffff612d5716565b61283c611e38836003015483612d5790919063ffffffff16565b6008556007820154600a5461285d9164ffffffffff1663ffffffff612d8e16565b600a55600682015460048301547f56b84851a1cd72311b185b7510e0e8d5aa69f8755dcc43463ebfe959bb1614f891600160a060020a0316906128a790849063ffffffff612d5716565b60408051600160a060020a03909316835260208301919091528051918290030190a15b60205460ff16156128f0576128eb8260080160048460080160010154612d9e565b612906565b6129068260080160168460080160010154612d9e565b5060070180546dff0000000000000000000000000019166d0100000000000000000000000000179055565b60008061293c61098b565b15612991576040805160e560020a62461bcd02815260206004820152601e60248201527f412063616d706169676e20697320616c72656164792072756e6e696e67210000604482015290519081900360640190fd5b670de0b6b3a76400006129bd600e54611ebd601154611ebd601054600f54612d8e90919063ffffffff16565b14612a12576040805160e560020a62461bcd02815260206004820152601860248201527f4163636f756e74696e6720697320696e636f7272656374210000000000000000604482015290519081900360640190fd5b601f805490612a24906001830161345c565b9150601f82815481101515612a3557fe5b60009182526020909120601e849055600b8054920201908155600c546001820155600f54600282015560105460038201556011546004820155600e546005820155600d54909150612a9990429063ffffffff640100000000909104811690612d8e16565b6006820180547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff1660a060020a67ffffffffffffffff9390931692909202919091179055600d805460078301805468ffffffff0000000000191663ffffffff92831665010000000000021780825592546cffffffff00000000000000000019909316640100000000909304909116690100000000000000000002919091179055601e54604080517f546f74616c00000000000000000000000000000000000000000000000000000060208083019190915260258083019490945282518083039094018452604590910191829052825182918401908083835b60208310612bb05780518252601f199092019160209182019101612b91565b5181516020939093036101000a6000190180199091169216919091179052604051920182900390912060088501908155601754612bf4945060169350909150612d9e565b6009810154600d54601e546040805193845264010000000090920463ffffffff16602084015282820152517f6a2b8b9a3942a8abc58fb4ae0c546618d960d0bc856f995b545464becc5be272916060908290030190a15050565b6000600160a060020a038316301415612c6957506001612d51565b600154600160a060020a0384811691161415612c8757506001612d51565b600054600160a060020a03161515612ca157506000612d51565b60008054604080517fb7009613000000000000000000000000000000000000000000000000000000008152600160a060020a038781166004830152306024830152600160e060020a0319871660448301529151919092169263b700961392606480820193602093909283900390910190829087803b158015612d2257600080fd5b505af1158015612d36573d6000803e3d6000fd5b505050506040513d6020811015612d4c57600080fd5b505190505b92915050565b6000670de0b6b3a7640000612d7d612d6f8585613434565b6706f05b59d3b20000612d8e565b811515612d8657fe5b049392505050565b80820182811015612d5157600080fd5b6001830154811115612daf57600080fd5b6001830154612dc4908263ffffffff612f3016565b600180850191909155820154612de0908263ffffffff612d8e16565b6001830155815483546040805184815290517f91394ae08f7d57415c1c2ac6886394ef2c7634274779088733b60f7504831cef9181900360200190a3505050565b60015460a060020a900460ff1615612e3857600080fd5b6001805460a060020a60ff02191660a060020a178155830154811115612e5d57600080fd5b600160a060020a0382161515612e7257600080fd5b6001830154612e87908263ffffffff612f3016565b6001840155600254612e9f908263ffffffff612f3016565b600255604051600160a060020a0383169082156108fc029083906000818181858888f19350505050158015612ed8573d6000803e3d6000fd5b508254604080518381529051600160a060020a03851692917fa3e8292cffffe79590527099bf9d852a1160f38b284cc5124afa894201c0f256919081900360200190a350506001805460a060020a60ff021916905550565b80820382811115612d5157600080fd5b60015460009060a060020a900460ff1615612f5a57600080fd5b6001805460a060020a60ff02191660a060020a179055604080517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529051600160a060020a038516916370a082319160248083019260209291908290030181600087803b158015612fd157600080fd5b505af1158015612fe5573d6000803e3d6000fd5b505050506040513d6020811015612ffb57600080fd5b5051600160a060020a038416600090815260036020526040902054909150613029908363ffffffff612d8e16565b81101561303557600080fd5b600160a060020a0383166000908152600285016020526040902054613060908363ffffffff612d8e16565b600160a060020a038416600081815260028701602090815260409182902093909355865481518681529151309491927f528fa5ea862bde3887a0891407d0cc4cbe935d1dd428a0fda5624c0a256facc892908290030190a450506001805460a060020a60ff02191690555050565b60015460a060020a900460ff16156130e557600080fd5b6001805460a060020a60ff02191660a060020a179055600160a060020a038316600090815260028501602052604090205481111561312257600080fd5b600160a060020a038216151561313757600080fd5b600160a060020a0383166000908152600285016020526040902054613162908263ffffffff612f3016565b600160a060020a0384166000908152600286016020908152604080832093909355600390522054613199908263ffffffff612f3016565b600160a060020a0380851660008181526003602090815260408083209590955584517fa9059cbb0000000000000000000000000000000000000000000000000000000081529387166004850152602484018690529351919363a9059cbb936044808201949293918390030190829087803b15801561321657600080fd5b505af115801561322a573d6000803e3d6000fd5b505050506040513d602081101561324057600080fd5b5051151561324d57600080fd5b8354604080518381529051600160a060020a03808616939087169290917f920718295e8e03a7fda1fe1d8d41ba008f378b1d679ea1a5f70eca3a389a25789181900360200190a450506001805460a060020a60ff02191690555050565b6002546132bd908263ffffffff612d8e16565b303110156132ca57600080fd5b6115b98230836125cc565b60015460a060020a900460ff16156132ec57600080fd5b6001805460a060020a60ff02191660a060020a17815584015482111561331157600080fd5b600160a060020a038316151561332657600080fd5b600184015461333b908363ffffffff612f3016565b6001850155600254613353908363ffffffff612f3016565b60028190555082600160a060020a0316828260405180828051906020019080838360005b8381101561338f578181015183820152602001613377565b50505050905090810190601f1680156133bc5780820380516001836020036101000a031916815260200191505b5091505060006040518083038185875af19250505015156133dc57600080fd5b8354604080518481529051600160a060020a03861692917fa3e8292cffffe79590527099bf9d852a1160f38b284cc5124afa894201c0f256919081900360200190a350506001805460a060020a60ff02191690555050565b600081158061345157505080820282828281151561344e57fe5b04145b1515612d5157600080fd5b8154818355818111156117b5576000838152602090206117b5916109db91600b9182028101918502015b808211156134f55760008082556001820181905560028201819055600382018190556004820181905560058201819055600682018054600160e060020a03191690556007820180546dffffffffffffffffffffffffffff19169055600882018190556009820155600b01613486565b50905600a165627a7a7230582008ce6fab0236da66d568723e50358cf211834d18299dd01e5d6a0b4040fb223d0029",
  "sourceMap": "4159:70:1:-;16174:5597:0;4159:70:1;;;-1:-1:-1;4159:70:1;;;;4144:85;;;;;;;;632:8:0;604:36;;680:13;647:46;;700:22;;;-1:-1:-1;;700:22:0;;;;-1:-1:-1;;772:36:0;;;;;;329:8;859:52;;952:43;923:72;;1040:19;1007:52;;1104:20;1071:53;;1250:66;4159:70:1;1250:66:0;;;;;;;1226:90;;;;;;1354:79;700:22;1354:79;;;;;;;1325:108;;;;;;1466:66;16174:5597;1466:66;;1354:79;1466:66;;;;;;;1442:90;;;;16387:54;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;1098:5:7;:18;;-1:-1:-1;;;;;;1098:18:7;1106:10;1098:18;;;;;;1132:23;;;;1098:5;;1132:23;16419:7:0;:14;;-1:-1:-1;;16419:14:0;16429:4;16419:14;;;16174:5597;;;;;;",
  "deployedSourceMap": "16174:5597:0:-;;;;;;;;;-1:-1:-1;;;16174:5597:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3569:7;:5;:7::i;:::-;16174:5597;3655:209;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3655:209:0;;;;;;;;;;;;;;;;;;;;;;17880:63;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17880:63:0;;;;10364:336;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10364:336:0;;;;;;;;;;;;;;;;;;;;7363:195;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7363:195:0;;;;6086:207;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6086:207:0;;;;1171:136:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1171:136:7;-1:-1:-1;;;;;1171:136:7;;;;;4002:381:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4002:381:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4002:381:0;;;;;;;;;;;;;;4425:327;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4425:327:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8293:123;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8293:123:0;;;;;;;;;-1:-1:-1;;;;;8293:123:0;;;;;;;;;;;;;;10760:249;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10760:249:0;;;;7614:110;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7614:110:0;;;;;;;;;;;;;;;;;;;;;;;7110:173;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7110:173:0;;;;3927:20:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3927:20:1;;;;12398:200:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12398:200:0;;;;12647:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12647:101:0;;;;15898:233;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15898:233:0;-1:-1:-1;;;;;15898:233:0;;;;;7788:186;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7788:186:0;;;;8474:574;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8474:574:0;;;;18207:161;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;18207:161:0;;;;;16359:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16359:19:0;;;;5826:215;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5826:215:0;;;;1143:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1143:33:0;;;;1315:164:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1315:164:7;-1:-1:-1;;;;;1315:164:7;;;;;1031:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1031:26:7;;;;13762:316:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13762:316:0;-1:-1:-1;;;;;13762:316:0;;;;;9102:581;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9102:581:0;;;;13498:198;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13498:198:0;;;;5497:194;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5497:194:0;;;;3954:51:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3954:51:1;-1:-1:-1;;;;;3954:51:1;;;;;11936:108:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11936:108:0;-1:-1:-1;;;;;11936:108:0;;;;;9736:569;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9736:569:0;;;;14448:485;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14448:485:0;;;;;;;;;;;;;;;;14257:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14257:134:0;-1:-1:-1;;;;;14257:134:0;;;;;487:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;487:20:0;;;;4936:122:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4936:122:1;-1:-1:-1;;;;;4936:122:1;;;;;17255:543:0;;;;11435:302;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11435:302:0;;;;994:30:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;994:30:7;;;;12133:203:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12133:203:0;;;;4831:97:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4831:97:1;;;;6598:215:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6598:215:0;;;;11069:306;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11069:306:0;;;;604:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:36:0;;;;14116:100;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14116:100:0;;;;15015:812;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15015:812:0;;;;;;;;;3376:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3376:26:0;;;;8004:227;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8004:227:0;;;;18029:170;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18029:170:0;;;;6848:188;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6848:188:0;;;;6338:215;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6338:215:0;;;;13208:226;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13208:226:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13208:226:0;;-1:-1:-1;13208:226:0;;-1:-1:-1;;;;;;;13208:226:0;5199:238;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5199:238:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4796:336;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4796:336:0;;;;16470:777;16542:24;16569:9;16579:14;;16569:25;;;;;;;;;;;;;;;;;;;;16542:52;;16609:8;:6;:8::i;:::-;16605:634;;;16646:9;16653:1;16646:6;:9::i;:::-;16686:42;16697:1;:7;;16706:10;16718:9;16686:10;:42::i;:::-;16605:634;;;16814:7;;;;16813:8;16805:38;;;;;-1:-1:-1;;;;;16805:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;16891:11;;;;;;;;;16890:12;16887:115;;;16941:20;16959:1;16941:17;:20::i;:::-;17017:14;:12;:14::i;:::-;17071:9;17081:14;;17071:25;;;;;;;;;;;;;;;;;;;;17067:29;;17133:9;17140:1;17133:6;:9::i;:::-;17173:42;17184:1;:7;;17193:10;17205:9;17173:10;:42::i;:::-;16470:777;:::o;3655:209::-;3713:9;:16;3693:4;;3713:21;3710:147;;;-1:-1:-1;3759:5:0;3752:12;;3710:147;3842:3;3804:9;3814:14;;3804:25;;;;;;;;;;;;;;;;;;;;;;;:34;;;-1:-1:-1;;;3804:34:0;;;;:41;;;-1:-1:-1;3710:147:0;3655:209;:::o;17880:63::-;1520:33:7;1533:10;1545:7;;-1:-1:-1;;;;;;1545:7:7;1520:12;:33::i;:::-;1512:42;;;;;;;;17921:7:0;:14;;-1:-1:-1;;17921:14:0;17931:4;17921:14;;;17880:63::o;10364:336::-;10417:4;10446:9;10456:14;;10446:25;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;10445:36;10442:251;;;10505:94;10553:9;10563:14;;10553:25;;;;;;;;;;;;;;;;;;;;:45;;;10505:9;10515:14;;10505:25;;;;;;;;;;;;;;;;;;:42;:25;;;;;:42;;;:94;:47;:94;:::i;:::-;10498:101;;;;10442:251;10668:12;;10639:23;;:42;;;:28;:42;:::i;7363:195::-;7405:4;7426:8;:6;:8::i;:::-;7422:129;;;7495:3;7458:9;7468:14;;7458:25;;;;;;;;;;;;;;;;;;;;;;;:34;;;-1:-1:-1;;;7458:34:0;;;;:40;;-1:-1:-1;7451:47:0;;7422:129;-1:-1:-1;7538:1:0;7531:8;;6086:207;6133:4;6153:8;:6;:8::i;:::-;6150:136;;;6185:9;6195:14;;6185:25;;;;;;;;;;;;;;;;;;;;:37;;;6178:44;;;;6150:136;-1:-1:-1;6262:12:0;;6255:19;;1171:136:7;1520:33;1533:10;1545:7;;-1:-1:-1;;;;;;1545:7:7;1520:12;:33::i;:::-;1512:42;;;;;;;;1251:5;:14;;-1:-1:-1;;1251:14:7;-1:-1:-1;;;;;1251:14:7;;;;;;;;;;;1281:18;;1293:5;;;1281:18;;-1:-1:-1;;1281:18:7;1171:136;:::o;4002:381:0:-;4056:10;4068:12;4082:9;4093:15;4110:12;4124:19;4174:4;-1:-1:-1;;;;;4174:10:0;;:12;;;;;-1:-1:-1;;;4174:12:0;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4174:12:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4174:12:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4174:12:0;4207:14;;;;;;;;4174:12;;-1:-1:-1;4207:4:0;;:12;;:14;;;;;4174:12;;4207:14;;;;;;;;;:4;:14;;;5:2:-1;;;;30:1;27;20:12;5:2;4207:14:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4207:14:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4207:14:0;4239:21;;;;;;;;4207:14;;-1:-1:-1;4239:4:0;;:19;;:21;;;;;4207:14;;4239:21;;;;;;;;;:4;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;4239:21:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4239:21:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4239:21:0;4282:15;;;;;;;;4239:21;;-1:-1:-1;4282:4:0;;:13;;:15;;;;;4239:21;;4282:15;;;;;;;;;:4;:15;;;5:2:-1;;;;30:1;27;20:12;5:2;4282:15:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4282:15:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4282:15:0;4318:14;;;;;;;;4282:15;;-1:-1:-1;4318:4:0;;:12;;:14;;;;;4282:15;;4318:14;;;;;;;;;:4;:14;;;5:2:-1;;;;30:1;27;20:12;5:2;4318:14:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4318:14:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4318:14:0;4357:18;;;;;;;;4318:14;;-1:-1:-1;4357:4:0;;:16;;:18;;;;;4318:14;;4357:18;;;;;;;;;:4;:18;;;5:2:-1;;;;30:1;27;20:12;5:2;4357:18:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4357:18:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4357:18:0;4002:381;;;;;;;;;;;-1:-1:-1;4002:381:0:o;4425:327::-;4481:10;4493:9;4504:10;4516:13;4531:11;4569:4;-1:-1:-1;;;;;4569:20:0;;:22;;;;;-1:-1:-1;;;4569:22:0;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4569:22:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4569:22:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4569:22:0;4609;;;;;;;;4569;;-1:-1:-1;4609:4:0;;:20;;:22;;;;;4569;;4609;;;;;;;;;:4;:22;;;5:2:-1;;;;30:1;27;20:12;5:2;4609:22:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4609:22:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4609:22:0;4650;;;;;;;;4609;;-1:-1:-1;4650:4:0;;:20;;:22;;;;;4609;;4650;;;;;;;;;:4;:22;;;5:2:-1;;;;30:1;27;20:12;5:2;4650:22:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4650:22:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4650:22:0;4694;;;;;;;;4650;;-1:-1:-1;4694:4:0;;:20;;:22;;;;;4650;;4694;;;;;;;;;:4;:22;;;5:2:-1;;;;30:1;27;20:12;5:2;4694:22:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4694:22:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4694:22:0;4736:8;;;;;;;;4694:22;;-1:-1:-1;4736:4:0;;:6;;:8;;;;;4694:22;;4736:8;;;;;;;;;:4;:8;;;5:2:-1;;;;30:1;27;20:12;5:2;4736:8:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4736:8:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4736:8:0;4425:327;;;;;;;;4736:8;4425:327;-1:-1:-1;4425:327:0:o;8293:123::-;8348:7;8375:9;8385:10;8375:21;;;;;;;;;;;;;;;;;;;;;;;:33;;;-1:-1:-1;;;;;8375:33:0;;8293:123;-1:-1:-1;;8293:123:0:o;10760:249::-;10806:4;10828:9;10838:14;;10828:25;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;10827:36;10823:179;;;10887:51;10904:9;10914:14;;10904:25;;;;;;;;;;;;;;;;;;:33;:25;;;;;:33;;10887:12;;;10904:33;;10887:51;:16;:51;:::i;10823:179::-;-1:-1:-1;10978:12:0;;10971:19;;7614:110;7656:6;7682:9;7692:14;;7682:25;;;;;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;7675:41;;7614:110;:::o;7110:173::-;7143:4;7163:8;:6;:8::i;:::-;7160:116;;;7195:9;7205:14;;7195:25;;;;;;;;;;;;;;;;;;;;;;;:27;;;;;;;;;-1:-1:-1;7188:34:0;;7160:116;-1:-1:-1;7262:2:0;;;;7255:9;;3927:20:1;;;;:::o;12398:200:0:-;12457:10;12482:1;12449:19;;;:7;:19;;;;;:30;;;:34;12441:65;;;;;-1:-1:-1;;;;;12441:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;12537:10;12529:19;;;;:7;:19;;;;;12559:30;;;;12517:73;;12529:19;12550:7;;12517:11;:73::i;:::-;12398:200::o;12647:101::-;1520:33:7;1533:10;1545:7;;-1:-1:-1;;;;;;1545:7:7;1520:12;:33::i;:::-;1512:42;;;;;;;;12714:5:0;;12721:18;;12697:43;;12705:7;;-1:-1:-1;;;;;12714:5:0;;;;12697:7;:43::i;15898:233::-;1520:33:7;1533:10;1545:7;;-1:-1:-1;;;;;;1545:7:7;1520:12;:33::i;:::-;1512:42;;;;;;;;1994:22:0;2008:7;;-1:-1:-1;;;;;;2008:7:0;1994:22;;:13;:22;;;;;;15982:8;;2035:3;;1994:37;;15982:8;1994:26;:37::i;:::-;:44;;1986:53;;;;;;2050:22;2064:7;;-1:-1:-1;;;;;;2064:7:0;2050:22;;:13;:22;;;;;2075:3;2050:28;;-1:-1:-1;;;;;16020:22:0;;;;16012:31;;;;;;16054:18;:29;;-1:-1:-1;;;;;16054:29:0;;-1:-1:-1;;16054:29:0;;;;;;;;16099:24;;;;;;;;;;;;;;;;1565:1:7;15898:233:0;:::o;7788:186::-;7829:4;7849:8;:6;:8::i;:::-;7846:121;;;7881:9;7891:14;;7881:25;;;;;;;;;;;;;;;;;;:33;:25;;;;;:33;;;;;-1:-1:-1;7874:40:0;;8474:574;8515:4;8535:8;:6;:8::i;:::-;8532:509;;;8566:90;8614:9;8624:14;;8614:25;;;;;;;;;;;;;;;;;;;;:41;;;8566:9;8576:14;;8566:25;;;;;;;;;8532:509;8693:9;8703:14;;8693:25;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;8692:36;8689:341;;;8756:164;8874:9;8884:14;;8874:25;;;;;;;;;;;;;;;;;;;;:45;;;8756:90;8804:9;8814:14;;8804:25;;;;;;;;;8756:90;:117;:164;:117;:164;:::i;8689:341::-;8997:16;;8968:23;;:46;;;:28;:46;:::i;18207:161::-;18270:7;;18289:24;;18270:7;;18262:16;;;;;;;;18316:9;:13;;18326:2;;18316:13;;;;;;;;;;;;;;;;18289:40;;18340:20;18358:1;18340:17;:20::i;:::-;18207:161;;:::o;16359:19::-;;;;;;:::o;5826:215::-;5873:4;5893:8;:6;:8::i;:::-;5890:144;;;5925:9;5935:14;;5925:25;;;;;;;;;;;;;;;;;;;;:41;;;5918:48;;;;5890:144;-1:-1:-1;6006:16:0;;5999:23;;1143:33;;;-1:-1:-1;;;;;1143:33:0;;:::o;1315:164:7:-;1520:33;1533:10;1545:7;;-1:-1:-1;;;;;;1545:7:7;1520:12;:33::i;:::-;1512:42;;;;;;;;1407:9;:22;;-1:-1:-1;;1407:22:7;-1:-1:-1;;;;;1407:22:7;;;;;;;;;;1445:26;;1461:9;;;1445:26;;;1315:164;:::o;1031:26::-;;;-1:-1:-1;;;;;1031:26:7;;:::o;13762:316:0:-;13828:21;13891:12;1520:33:7;1533:10;1545:7;;-1:-1:-1;;;;;;1545:7:7;1520:12;:33::i;:::-;1512:42;;;;;;;;13852:28:0;;;;;;13875:4;13852:28;;;;;;-1:-1:-1;;;;;13852:22:0;;;;;:28;;;;;;;;;;;;;;-1:-1:-1;13852:22:0;:28;;;5:2:-1;;;;30:1;27;20:12;5:2;13852:28:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13852:28:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;13852:28:0;-1:-1:-1;;;;;13927:25:0;;;;;;:18;13852:28;13927:25;;;;;13852:28;;-1:-1:-1;13906:47:0;;13852:28;;13906:47;:20;:47;:::i;:::-;13891:62;;13964:34;13977:4;13983:5;13990:7;13964:12;:34::i;:::-;-1:-1:-1;;;;;14044:25:0;;;;;;:18;:25;;;;;;14009:61;;14019:4;;14025:5;;14032:10;;14009:9;:61::i;:::-;13762:316;;;:::o;9102:581::-;9150:4;9170:8;:6;:8::i;:::-;9167:509;;;9201:90;9249:9;9259:14;;9249:25;;;;;;;;;;;;;;;;;;;;:41;;;9201:9;9211:14;;9201:25;;;;;;;;;9167:509;9328:9;9338:14;;9328:25;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;9327:36;9324:341;;;9391:164;9509:9;9519:14;;9509:25;;;;;;;;;;;;;;;;;;;;:45;;;9391:90;9439:9;9449:14;;9439:25;;;;;;;;;9324:341;9632:16;;9603:23;;:46;;;:28;:46;:::i;13498:198::-;13549:12;1520:33:7;1533:10;1545:7;;-1:-1:-1;;;;;;1545:7:7;1520:12;:33::i;:::-;1512:42;;;;;;;;13590:8:0;;13564:35;;13572:4;13564:21;;:35;:25;:35;:::i;:::-;13549:50;;13610:25;13621:4;13627:7;13610:10;:25::i;:::-;13646:42;13654:4;13660:10;13672:4;:15;;;13646:7;:42::i;5497:194::-;5536:4;5556:8;:6;:8::i;:::-;5553:131;;;5588:9;5598:14;;5588:25;;;;;;;;;;;;;;;;;;;;:31;;;5581:38;;;;5553:131;-1:-1:-1;5659:13:0;;5652:20;;3954:51:1;;;;;;;;;;;;;:::o;11936:108:0:-;-1:-1:-1;;;;;12012:13:0;11988:4;12012:13;;;:7;:13;;;;;:24;;;;11936:108::o;9736:569::-;9784:4;9804:8;:6;:8::i;:::-;9801:497;;;9835:86;9883:9;9893:14;;9883:25;;;;;;;;;;;;;;;;;;;;:37;;;9835:9;9845:14;;9835:25;;;;;;;;;9801:497;9958:9;9968:14;;9958:25;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;9957:36;9954:333;;;10021:160;10135:9;10145:14;;10135:25;;;;;;;;;;;;;;;;;;;;:45;;;10021:86;10069:9;10079:14;;10069:25;;;;;;;;;14448:485;1520:33:7;1533:10;1545:7;;-1:-1:-1;;;;;;1545:7:7;1520:12;:33::i;:::-;1512:42;;;;;;;;14568:14:0;14584:7;14593:8;1757:3;1748:5;:12;;:28;;;;;1773:3;1764:5;:12;;1748:28;1740:37;;;;;;;;14642:9;408:8;14662:12;1748;;;;;;:28;;;1773:3;1764:5;:12;;1748:28;1740:37;;;;;;;;14689:7;1680:117;;14698:10;14710:7;1757:3;1748:5;:12;;:28;;;;;1773:3;1764:5;:12;;1748:28;1740:37;;;;;;;;14751:14;14735:13;:30;;;;14795:9;14776:16;:28;;;;14825:7;14815;;:17;;;;;;;;;;;;;;;;;;14848:2;14843;;:7;;;;;;;;;;;;;;;;;;14866:59;14886:14;14902:2;14906:7;14915:9;14866:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1788:1;;;;;;1565::7;;;14448:485:0;;;;:::o;14257:134::-;1520:33:7;1533:10;1545:7;;-1:-1:-1;;;;;;1545:7:7;1520:12;:33::i;:::-;1512:42;;;;;;;;-1:-1:-1;;;;;14357:25:0;;;;;;:18;:25;;;;;;14322:61;;14332:4;;14338:5;;14345:10;;14322:9;:61::i;487:20::-;;;;:::o;4936:122:1:-;-1:-1:-1;;;;;5025:25:1;5001:4;5025:25;;;:18;:25;;;;;;;4936:122::o;17255:543:0:-;17439:24;1520:33:7;1533:10;1545:7;;-1:-1:-1;;;;;;1545:7:7;1520:12;:33::i;:::-;1512:42;;;;;;;;17313:7:0;;;;17305:16;;;;;;;;17332:7;:15;;-1:-1:-1;;17332:15:0;;;17371:9;:16;:21;17368:230;;17466:9;17476:14;;17466:25;;;;;;;;;;;;;;;;;;;;17439:52;;17514:1;:11;;;;;;;;;;;;17506:52;;;;;;;-1:-1:-1;;;;;17506:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;11435:302;11481:4;11503:9;11513:14;;11503:25;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;11502:36;11498:232;;;11562:104;11579:86;11627:9;11637:14;;11627:25;;;;;;;;;11579:86;11562:12;;;:104;:16;:104;:::i;11498:232::-;-1:-1:-1;11706:12:0;;11699:19;;994:30:7;;;-1:-1:-1;;;;;994:30:7;;:::o;12133:203:0:-;12194:10;12219:1;12186:19;;;:7;:19;;;;;:30;;;:34;12178:67;;;;;-1:-1:-1;;;;;12178:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;12272:10;12264:19;;;;:7;:19;;;;;12297:30;;;;12256:72;;12272:10;12256:7;:72::i;4831:97:1:-;4905:15;;4831:97;:::o;6598:215:0:-;6645:4;6665:8;:6;:8::i;:::-;6662:144;;;6697:9;6707:14;;6697:25;;;;;;;;;;;;;;;;;;;;:41;;;6690:48;;;;6662:144;-1:-1:-1;6778:16:0;;6771:23;;11069:306;11115:4;11137:9;11147:14;;11137:25;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;11136:36;11132:236;;;11196:108;11213:90;11261:9;11271:14;;11261:25;;;;;;;;;11213:90;11196:12;;;:108;:16;:108;:::i;11132:236::-;-1:-1:-1;11344:12:0;;11337:19;;604:36;;;;:::o;14116:100::-;1520:33:7;1533:10;1545:7;;-1:-1:-1;;;;;;1545:7:7;1520:12;:33::i;:::-;1512:42;;;;;;;;14166::0;14174:4;14180:10;14192:4;:15;;;14166:7;:42::i;15015:812::-;1520:33:7;1533:10;1545:7;;-1:-1:-1;;;;;;1545:7:7;1520:12;:33::i;:::-;1512:42;;;;;;;;15119:35:0;15144:9;15119:20;:5;15129:9;15119:20;:9;:20;:::i;:::-;:24;:35;:24;:35;:::i;:::-;15156:1;408:8;1757:3;1748:5;:12;;:28;;;;;1773:3;1764:5;:12;;1748:28;1740:37;;;;;;;;1994:22;2008:7;;-1:-1:-1;;;;;;2008:7:0;1994:22;;:13;:22;;;;;;15261:7;;2035:3;;1994:37;;15261:7;1994:26;:37::i;:::-;:44;;1986:53;;;;;;2050:22;2064:7;;-1:-1:-1;;;;;;2064:7:0;2050:22;;:13;:22;;;;;2075:3;2050:28;;408:8;15331:20;;;15323:29;;;;;;15418:20;15409:29;;;15401:38;;;;;;15517:20;15504:33;;;15496:42;;;;;;15564:12;:20;;;15595:16;:28;;;15634:20;:32;;;15696:48;15657:9;15696:33;15614:9;15696:33;408:8;15579:5;15696:18;:11;:18;:::i;:::-;:22;:33;:22;:33;:::i;:48::-;15677:16;:67;;;15760:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1788:1;1565::7;;;15015:812:0;;;:::o;3376:26::-;;;;:::o;8004:227::-;8049:7;8116:9;8126:14;;8116:25;;;;;;;;;;;;;;;;;;:37;:25;;;;;:37;;-1:-1:-1;;;;;8116:37:0;;-1:-1:-1;8004:227:0;:::o;18029:170::-;18089:7;;18108:24;;18089:7;;18081:16;;;;;;;;18135:9;18145:14;;18135:25;;;;;;;;;;;;;;;;;;;;18108:52;;18171:20;18189:1;18171:17;:20::i;6848:188::-;6886:4;6906:8;:6;:8::i;:::-;6903:126;;;6938:9;6948:14;;6938:25;;;;;;;;;;;;;;;;;;;;;;;:32;;;;;;;;;-1:-1:-1;6931:39:0;;6903:126;-1:-1:-1;7010:7:0;;;;;;;7003:14;;6338:215;6385:4;6405:8;:6;:8::i;:::-;6402:144;;;6437:9;6447:14;;6437:25;;;;;;;;;;;;;;;;;;;;:41;;;6430:48;;;;6402:144;-1:-1:-1;6518:16:0;;6511:23;;13208:226;1520:33:7;1533:10;1545:7;;-1:-1:-1;;;;;;1545:7:7;1520:12;:33::i;:::-;1512:42;;;;;;;;13377:18:0;;13397;;13359:67;;13368:7;;-1:-1:-1;;;;;13377:18:0;;;;13417:8;13359;:67::i;5199:238::-;5243:14;5259:18;5279;5322:4;-1:-1:-1;;;;;5322:13:0;;:15;;;;;-1:-1:-1;;;5322:15:0;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5322:15:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5322:15:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5322:15:0;5364:19;;;;;;;;5322:15;;-1:-1:-1;5364:4:0;;:17;;:19;;;;;5322:15;;5364:19;;;;;;;;;:4;:19;;;5:2:-1;;;;30:1;27;20:12;5:2;5364:19:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5364:19:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5364:19:0;5410;;;;;;;;5364;;-1:-1:-1;5410:4:0;;:17;;:19;;;;;5364;;5410;;;;;;;;;:4;:19;;;5:2:-1;;;;30:1;27;20:12;5:2;5410:19:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5410:19:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5410:19:0;5199:238;;;;5410:19;5199:238;-1:-1:-1;5199:238:0:o;4796:336::-;4863:9;:16;4840:7;;4863:21;4860:265;;;-1:-1:-1;4916:3:0;4901:19;;4860:265;4956:8;:6;:8::i;:::-;4953:161;;;4992:4;-1:-1:-1;;;;;4992:11:0;;5021:1;5004:14;;:18;4992:31;;;;;-1:-1:-1;;;4992:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4992:31:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4992:31:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4992:31:0;;-1:-1:-1;4985:38:0;;4953:161;5071:4;-1:-1:-1;;;;;5071:11:0;;5083:14;;5071:27;;;;;-1:-1:-1;;;5071:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;18395:677:0;18465:10;;;;18479:3;-1:-1:-1;;;18465:10:0;;;;;:17;;18457:45;;;;;-1:-1:-1;;;;;18457:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;18563:7;;18550:9;:20;;18542:50;;;;;-1:-1:-1;;;;;18542:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;18640:9;;;:14;;-1:-1:-1;;18640:14:0;;18653:1;18640:14;;;;;;;;;;;;18725:13;;;:26;;18741:10;-1:-1:-1;;18725:26:0;;;;;;18792:3;;;;;;18780:9;:15;;;;;;;;:20;;18799:1;18780:20;18777:130;;;18877:17;;;;18864:7;;:31;;;:12;:31;:::i;:::-;18854:41;;18777:130;18966:10;;;;18935:56;;;18943:10;18935:56;;18955:9;18935:56;;;;18986:3;18966:10;-1:-1:-1;;;18966:10:0;;;;;:24;18935:56;;;;;;;;;;;;;;;;;19030:8;;;;19022:17;;:3;;19030:8;;;;;;;;19022:7;:17;:::i;:::-;19002:1;:10;;;:38;;;;;;;;;;;;;;;;;;18395:677;:::o;5066:227:1:-;5168:12;;;;:24;;5185:6;5168:24;:16;:24;:::i;:::-;5153:12;;;:39;5214:8;;:20;;5227:6;5214:20;:12;:20;:::i;:::-;5203:8;:31;5263:6;;5250:35;;;;;;;;-1:-1:-1;;;;;5250:35:1;;;5263:6;5250:35;;;;;;;;;;5066:227;;;:::o;20190:1578:0:-;20271:10;;;;20440:17;;20284:3;-1:-1:-1;;;20271:10:0;;;;;:16;20263:45;;;;;-1:-1:-1;;;;;20263:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;20328:11;;;;;;;;;20327:12;20319:43;;;;;-1:-1:-1;;;;;20319:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;20386:9;;;;;;:14;20383:1014;;-1:-1:-1;20460:18:0;;;;20578:13;;;;-1:-1:-1;;;;;20578:13:0;20570:22;;;;:7;:22;;;;;20612:17;;;;20549:82;;20460:7;;;;20594:36;;20460:18;;20594:36;:17;:36;:::i;:::-;20549:11;:82::i;:::-;20684:13;;;;-1:-1:-1;;;;;20684:13:0;;20646:22;;;:7;:22;;;;;:52;20755:17;;;;20724:50;;20737:36;;:12;;:36;:17;:36;:::i;:::-;20724:8;;;:50;:12;:50;:::i;:::-;20713:8;:61;20839:13;;;;20791:63;;20803:7;;;;20812;;20821:32;;:12;;:32;:17;:32;:::i;20791:63::-;20884:50;20901:32;20919:1;:13;;;20901:12;:17;;:32;;;;:::i;20884:50::-;20869:12;:65;20999:17;;;;20951:67;;20963:7;;;;20972;;20981:36;;:12;;:36;:17;:36;:::i;20951:67::-;21048:54;21065:36;21083:1;:17;;;21065:12;:17;;:36;;;;:::i;21048:54::-;21033:12;:69;21294:9;;;;21277:12;;:27;;21294:9;;21277:27;:16;:27;:::i;:::-;21262:12;:42;21333:13;;;;21366:17;;;;21326:59;;-1:-1:-1;;;;;21333:13:0;;21348:36;;:12;;:36;:17;:36;:::i;:::-;21326:59;;;-1:-1:-1;;;;;21326:59:0;;;;;;;;;;;;;;;;;;;;;20383:1014;21457:7;;;;21454:278;;;21536:46;21548:1;:7;;21557:4;21563:1;:7;;:18;;;21536:11;:46::i;:::-;21454:278;;;21666:54;21678:1;:7;;21687:12;21701:1;:7;;:18;;;21666:11;:54::i;:::-;-1:-1:-1;21742:11:0;;:18;;-1:-1:-1;;21742:18:0;;;;;20190:1578::o;19113:1036::-;19371:16;19419:24;19166:8;:6;:8::i;:::-;19165:9;19157:52;;;;;-1:-1:-1;;;;;19157:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;408:8;19228:82;19289:20;;19228:56;19267:16;;19228:34;19245:16;;19228:12;;:16;;:34;;;;:::i;:82::-;:93;19220:130;;;;;-1:-1:-1;;;;;19220:130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;19390:9;:18;;;;;;;;;:::i;:::-;19371:37;;19446:9;19456:11;19446:22;;;;;;;;;;;;;;;;;;19479:14;:28;;;19446:22;19530:13;;19446:22;;;19520:23;;;19574:16;;19554:17;;;:36;19617:12;;19601:13;;;:28;19660:16;;19640:17;;;:36;19707:16;;19687:17;;;:36;19758:20;;19734:21;;;:44;19817:7;;19446:22;;-1:-1:-1;19809:16:0;;:3;;19817:7;;;;;;;;19809;:16;:::i;:::-;19789:10;;;:37;;;;-1:-1:-1;;;19789:37:0;;;;;;;;;;;;;;;19843:2;;;19837:3;;;:8;;-1:-1:-1;;19837:8:0;19843:2;;;;19837:8;;;;;;19867:7;;-1:-1:-1;;19856:18:0;;;19867:7;;;;;;;19856:18;;;;;;;;19936:14;;19910:41;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;19910:41:0;;;;;;;;19900:52;;19910:41;;19900:52;;;;19910:41;19900:52;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;;;;365:33;;19900:52:0;;;;;;;;;;19885:7;;;:67;;;20048:23;;20013:59;;-1:-1:-1;20025:12:0;;-1:-1:-1;19885:7:0;;-1:-1:-1;20013:11:0;:59::i;:::-;20096:18;;;;20116:7;;20125:14;;20088:52;;;;;;20116:7;;;;;;20088:52;;;;;;;;;;;;;;;;;;;19113:1036;;:::o;1582:371:7:-;1652:4;-1:-1:-1;;;;;1673:20:7;;1688:4;1673:20;1669:277;;;-1:-1:-1;1717:4:7;1710:11;;1669:277;1750:5;;-1:-1:-1;;;;;1743:12:7;;;1750:5;;1743:12;1739:207;;;-1:-1:-1;1779:4:7;1772:11;;1739:207;1830:1;1805:9;-1:-1:-1;;;;;1805:9:7;:27;1801:145;;;-1:-1:-1;1856:5:7;1849:12;;1801:145;1901:9;;;:33;;;;;;-1:-1:-1;;;;;1901:33:7;;;;;;;1924:4;1901:33;;;;-1:-1:-1;;;;;;1901:33:7;;;;;;;;:9;;;;;:17;;:33;;;;;;;;;;;;;;;;;;:9;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;1901:33:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1901:33:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1901:33:7;;-1:-1:-1;1801:145:7;1582:371;;;;:::o;1005:113:2:-;1058:6;953:8;1081:23;1085:9;1089:1;1092;1085:3;:9::i;:::-;1096:7;1081:3;:23::i;:::-;:29;;;;;;;;;1005:113;-1:-1:-1;;;1005:113:2:o;165:104::-;249:5;;;244:16;;;;236:25;;;;;7012:325:1;7130:16;;;;:26;-1:-1:-1;7130:26:1;7122:35;;;;;;7187:16;;;;:28;;7208:6;7187:28;:20;:28;:::i;:::-;7168:16;;;;:47;;;;7243:14;;;:26;;7262:6;7243:26;:18;:26;:::i;:::-;7226:14;;;:43;7312:8;;7300:10;;7285:44;;;;;;;;;;;;;;;;;7012:325;;;:::o;5731:372::-;3795:3;;-1:-1:-1;;;3795:3:1;;;;3794:4;3786:13;;;;;;3816:4;3810:10;;-1:-1:-1;;;;;;3810:10:1;-1:-1:-1;;;3810:10:1;;;5846:12;;;:22;-1:-1:-1;5846:22:1;5838:31;;;;;;-1:-1:-1;;;;;5888:17:1;;;;5880:26;;;;;;5942:12;;;;:24;;5959:6;5942:24;:16;:24;:::i;:::-;5927:12;;;:39;5988:8;;:20;;6001:6;5988:20;:12;:20;:::i;:::-;5977:8;:31;6021:20;;-1:-1:-1;;;;;6021:12:1;;;:20;;;;;6034:6;;6021:20;;;;6034:6;6021:12;:20;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;6075:6:1;;6067:28;;;;;;;;-1:-1:-1;;;;;6067:28:1;;;6075:6;6067:28;;;;;;;;;;-1:-1:-1;;3843:3:1;:11;;-1:-1:-1;;;;;;3843:11:1;;;-1:-1:-1;5731:372:1:o;275:104:2:-;359:5;;;354:16;;;;346:25;;;;;7965:399:1;3795:3;;8076:12;;-1:-1:-1;;;3795:3:1;;;;3794:4;3786:13;;;;;;3816:4;3810:10;;-1:-1:-1;;;;;;3810:10:1;-1:-1:-1;;;3810:10:1;;;8091:29;;;;;;8115:4;8091:29;;;;;;-1:-1:-1;;;;;8091:23:1;;;;;:29;;;;;;;;;;;;;;3810:10;8091:23;:29;;;5:2:-1;;;;30:1;27;20:12;5:2;8091:29:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8091:29:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8091:29:1;-1:-1:-1;;;;;8150:26:1;;;;;;:18;8091:29;8150:26;;;;;8091:29;;-1:-1:-1;8150:38:1;;8181:6;8150:38;:30;:38;:::i;:::-;8139:49;;;8131:58;;;;;;-1:-1:-1;;;;;8236:31:1;;;;;;:23;;;:31;;;;;;:43;;8272:6;8236:43;:35;:43;:::i;:::-;-1:-1:-1;;;;;8202:31:1;;;;;;:23;;;:31;;;;;;;;;:77;;;;8310:14;;8295:61;;;;;;;8342:4;;8310:14;;8295:61;;;;;;;;;-1:-1:-1;;3843:3:1;:11;;-1:-1:-1;;;;;;3843:11:1;;;-1:-1:-1;;7965:399:1:o;6521:483::-;3795:3;;-1:-1:-1;;;3795:3:1;;;;3794:4;3786:13;;;;;;3816:4;3810:10;;-1:-1:-1;;;;;;3810:10:1;-1:-1:-1;;;3810:10:1;;;-1:-1:-1;;;;;6654:23:1;;3810:10;6654:23;;;:15;;;:23;;;;;;:33;-1:-1:-1;6654:33:1;6646:42;;;;;;-1:-1:-1;;;;;6707:17:1;;;;6699:26;;;;;;-1:-1:-1;;;;;6772:23:1;;;;;;:15;;;:23;;;;;;:35;;6800:6;6772:35;:27;:35;:::i;:::-;-1:-1:-1;;;;;6746:23:1;;;;;;:15;;;:23;;;;;;;;:61;;;;6847:18;:26;;;;:38;;6878:6;6847:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;6818:26:1;;;;;;;:18;:26;;;;;;;;:67;;;;6906:35;;;;;;;;;;;;;;;;;;;;6818:26;;6906:22;;:35;;;;;6818:26;;6906:35;;;;;;;;6818:26;6906:35;;;5:2:-1;;;;30:1;27;20:12;5:2;6906:35:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6906:35:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6906:35:1;6898:44;;;;;;;;6968:6;;6958:38;;;;;;;;-1:-1:-1;;;;;6958:38:1;;;;;;;;6968:6;;6958:38;;;;;;;;;-1:-1:-1;;3843:3:1;:11;;-1:-1:-1;;;;;;3843:11:1;;;-1:-1:-1;;6521:483:1:o;7759:198::-;7873:8;;:20;;7886:6;7873:20;:12;:20;:::i;:::-;7856:4;7848:21;:45;;7840:54;;;;;;7905:44;7916:9;7935:4;7942:6;7905:10;:44::i;6111:402::-;3795:3;;-1:-1:-1;;;3795:3:1;;;;3794:4;3786:13;;;;;;3816:4;3810:10;;-1:-1:-1;;;;;;3810:10:1;-1:-1:-1;;;3810:10:1;;;6239:12;;;:22;-1:-1:-1;6239:22:1;6231:31;;;;;;-1:-1:-1;;;;;6281:17:1;;;;6273:26;;;;;;6335:12;;;;:24;;6352:6;6335:24;:16;:24;:::i;:::-;6320:12;;;:39;6381:8;;:20;;6394:6;6381:20;:12;:20;:::i;:::-;6370:8;:31;;;;6422:3;-1:-1:-1;;;;;6422:8:1;6437:6;6445:4;6422:28;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6422:28:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6414:37;;;;;;;;6485:6;;6477:28;;;;;;;;-1:-1:-1;;;;;6477:28:1;;;6485:6;6477:28;;;;;;;;;;-1:-1:-1;;3843:3:1;:11;;-1:-1:-1;;;;;;3843:11:1;;;-1:-1:-1;;6111:402:1:o;385:118:2:-;437:6;464;;;:30;;-1:-1:-1;;479:5:2;;;493:1;488;479:5;474:15;;;;;;;;:20;464:30;456:39;;;;;;;16174:5597:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;16174:5597:0;;;;;;;;-1:-1:-1;;16174:5597:0;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity^0.4.24;\r\n\r\nimport \"./lib/auth.sol\";\r\nimport \"./accounting/contracts/Accounting.sol\";\r\n\r\n///Base contract with all the events, getters, and simple logic\r\ncontract ButtonBase is DSAuth, Accounting {\r\n    ///Using a the original DSMath as a library\r\n    using DSMath for uint;\r\n\r\n    uint constant ONE_PERCENT_WAD = 10 ** 16;// 1 wad is 10^18, so 1% in wad is 10^16\r\n    uint constant ONE_WAD = 10 ** 18;\r\n\r\n    uint public totalRevenue;\r\n    uint public totalCharity;\r\n    uint public totalWon;\r\n\r\n    uint public totalPresses;\r\n\r\n    ///Button parameters - note that these can change\r\n    uint public startingPrice = 2 finney;\r\n    uint internal _priceMultiplier = 106 * 10 **16;\r\n    uint32 internal _n = 4; //increase the price after every n presses\r\n    uint32 internal _period = 30 minutes;// what's the period for pressing the button\r\n    uint internal _newCampaignFraction = ONE_PERCENT_WAD; //1%\r\n    uint internal _devFraction = 10 * ONE_PERCENT_WAD - _newCampaignFraction; //9%\r\n    uint internal _charityFraction = 5 * ONE_PERCENT_WAD; //5%\r\n    uint internal _jackpotFraction = 85 * ONE_PERCENT_WAD; //85%\r\n    \r\n    address public charityBeneficiary;\r\n\r\n    ///Internal accounts to hold value:\r\n    Account revenue = \r\n    Account({\r\n        name: \"Revenue\",\r\n        balanceETH: 0\r\n    });\r\n\r\n    Account nextCampaign = \r\n    Account({\r\n        name: \"Next Campaign\",\r\n        balanceETH: 0       \r\n    });\r\n\r\n    Account charity = \r\n    Account({\r\n        name: \"Charity\",\r\n        balanceETH: 0\r\n    });\r\n\r\n    ///Accounts of winners\r\n    mapping (address => Account) winners;\r\n\r\n    /// Function modifier to put limits on how values can be set\r\n    modifier limited(uint value, uint min, uint max) {\r\n        require(value >= min && value <= max);\r\n        _;\r\n    }\r\n\r\n    /// A function modifier which limits how often a function can be executed\r\n    mapping (bytes4 => uint) internal _lastExecuted;\r\n    modifier timeLimited(uint _howOften) {\r\n        require(_lastExecuted[msg.sig].add(_howOften) <= now);\r\n        _lastExecuted[msg.sig] = now;\r\n        _;\r\n    }\r\n\r\n    ///Button events\r\n    event Pressed(address by, uint paid, uint64 timeLeft);\r\n    event Started(uint startingETH, uint32 period, uint i);\r\n    event Winrar(address guy, uint jackpot);\r\n    ///Settings changed events\r\n    event CharityChanged(address newCharityBeneficiary);\r\n    event ButtonParamsChanged(uint startingPrice, uint32 n, uint32 period, uint priceMul);\r\n    event AccountingParamsChanged(uint devFraction, uint charityFraction, uint jackpotFraction);\r\n\r\n    ///Struct that represents a button champaign\r\n    struct ButtonCampaign {\r\n        uint price; ///Every campaign starts with some price  \r\n        uint priceMultiplier;/// Price will be increased by this much every n presses\r\n        uint devFraction; /// this much will go to the devs (10^16 = 1%)\r\n        uint charityFraction;/// This much will go to charity\r\n        uint jackpotFraction;/// This much will go to the winner (last presser)\r\n        uint newCampaignFraction;/// This much will go to the next campaign starting balance\r\n\r\n        address lastPresser;\r\n        uint64 deadline;\r\n        uint40 presses;\r\n        uint32 n;\r\n        uint32 period;\r\n        bool finalized;\r\n\r\n        Account total;/// base account to hold all the value until the campaign is finalized \r\n    }\r\n\r\n    uint public lastCampaignID;\r\n    ButtonCampaign[] campaigns;\r\n\r\n    /// implemented in the child contract\r\n    function press() public payable;\r\n    \r\n    function () public payable {\r\n        press();\r\n    }\r\n\r\n    ///Getters:\r\n\r\n    ///Check if there's an active campaign\r\n    function active() public view returns(bool) {\r\n        if(campaigns.length == 0) { \r\n            return false;\r\n        } else {\r\n            return campaigns[lastCampaignID].deadline >= now;\r\n        }\r\n    }\r\n\r\n    ///Get information about the latest campaign or the next campaign if the last campaign has ended, but no new one has started\r\n    function latestData() external view returns(\r\n        uint price, uint jackpot, uint char, uint64 deadline, uint presses, address lastPresser\r\n        ) {\r\n        price = this.price();\r\n        jackpot = this.jackpot();\r\n        char = this.charityBalance();\r\n        deadline = this.deadline();\r\n        presses = this.presses();\r\n        lastPresser = this.lastPresser();\r\n    }\r\n\r\n    ///Get the latest parameters\r\n    function latestParams() external view returns(\r\n        uint jackF, uint revF, uint charF, uint priceMul, uint nParam\r\n    ) {\r\n        jackF = this.jackpotFraction();\r\n        revF = this.revenueFraction();\r\n        charF = this.charityFraction();\r\n        priceMul = this.priceMultiplier();\r\n        nParam = this.n();\r\n    }\r\n\r\n    ///Get the last winner address\r\n    function lastWinner() external view returns(address) {\r\n        if(campaigns.length == 0) {\r\n            return address(0x0);\r\n        } else {\r\n            if(active()) {\r\n                return this.winner(lastCampaignID - 1);\r\n            } else {\r\n                return this.winner(lastCampaignID);\r\n            }\r\n        }\r\n    }\r\n\r\n    ///Get the total stats (cumulative for all campaigns)\r\n    function totalsData() external view returns(uint _totalWon, uint _totalCharity, uint _totalPresses) {\r\n        _totalWon = this.totalWon();\r\n        _totalCharity = this.totalCharity();\r\n        _totalPresses = this.totalPresses();\r\n    }\r\n   \r\n   /// The latest price for pressing the button\r\n    function price() external view returns(uint) {\r\n        if(active()) {\r\n            return campaigns[lastCampaignID].price;\r\n        } else {\r\n            return startingPrice;\r\n        }\r\n    }\r\n\r\n    /// The latest jackpot fraction - note the fractions can be changed, but they don't affect any currently running campaign\r\n    function jackpotFraction() public view returns(uint) {\r\n        if(active()) {\r\n            return campaigns[lastCampaignID].jackpotFraction;\r\n        } else {\r\n            return _jackpotFraction;\r\n        }\r\n    }\r\n\r\n    /// The latest revenue fraction\r\n    function revenueFraction() public view returns(uint) {\r\n        if(active()) {\r\n            return campaigns[lastCampaignID].devFraction;\r\n        } else {\r\n            return _devFraction;\r\n        }\r\n    }\r\n\r\n    /// The latest charity fraction\r\n    function charityFraction() public view returns(uint) {\r\n        if(active()) {\r\n            return campaigns[lastCampaignID].charityFraction;\r\n        } else {\r\n            return _charityFraction;\r\n        }\r\n    }\r\n\r\n    /// The latest price multiplier\r\n    function priceMultiplier() public view returns(uint) {\r\n        if(active()) {\r\n            return campaigns[lastCampaignID].priceMultiplier;\r\n        } else {\r\n            return _priceMultiplier;\r\n        }\r\n    }\r\n\r\n    /// The latest preiod\r\n    function period() public view returns(uint) {\r\n        if(active()) {\r\n            return campaigns[lastCampaignID].period;\r\n        } else {\r\n            return _period;\r\n        }\r\n    }\r\n\r\n    /// The latest N - the price will increase every Nth presses\r\n    function n() public view returns(uint) {\r\n        if(active()) {\r\n            return campaigns[lastCampaignID].n;\r\n        } else {\r\n            return _n;\r\n        }\r\n    }\r\n\r\n    /// How much time is left in seconds if there's a running campaign\r\n    function timeLeft() external view returns(uint) {\r\n        if (active()) {\r\n            return campaigns[lastCampaignID].deadline - now;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /// What is the latest campaign's deadline\r\n    function deadline() external view returns(uint64) {\r\n        return campaigns[lastCampaignID].deadline;\r\n    }\r\n\r\n    /// The number of presses for the current campaign\r\n    function presses() external view returns(uint) {\r\n        if(active()) {\r\n            return campaigns[lastCampaignID].presses;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /// Last presser\r\n    function lastPresser() external view returns(address) {\r\n        // if(campaigns.length != 0) {\r\n        return campaigns[lastCampaignID].lastPresser;\r\n        // } else {\r\n        //     return address(0);\r\n        // }\r\n    }\r\n\r\n    /// Returns the winner for any given campaign ID\r\n    function winner(uint campaignID) external view returns(address) {\r\n        return campaigns[campaignID].lastPresser;\r\n    }\r\n\r\n    /// The current (or next) campaign's jackpot\r\n    function jackpot() external view returns(uint) {\r\n        if(active()){\r\n            return campaigns[lastCampaignID].total.balanceETH.wmul(campaigns[lastCampaignID].jackpotFraction);\r\n        } else {\r\n            if(!campaigns[lastCampaignID].finalized) {\r\n                return campaigns[lastCampaignID].total.balanceETH.wmul(campaigns[lastCampaignID].jackpotFraction)\r\n                    .wmul(campaigns[lastCampaignID].newCampaignFraction);\r\n            } else {\r\n                return nextCampaign.balanceETH.wmul(_jackpotFraction);\r\n            }\r\n        }\r\n    }\r\n\r\n    ///Current/next campaign charity balance\r\n    function charityBalance() external view returns(uint) {\r\n        if(active()){\r\n            return campaigns[lastCampaignID].total.balanceETH.wmul(campaigns[lastCampaignID].charityFraction);\r\n        } else {\r\n            if(!campaigns[lastCampaignID].finalized) {\r\n                return campaigns[lastCampaignID].total.balanceETH.wmul(campaigns[lastCampaignID].charityFraction)\r\n                    .wmul(campaigns[lastCampaignID].newCampaignFraction);\r\n            } else {\r\n                return nextCampaign.balanceETH.wmul(_charityFraction);\r\n            }\r\n        }\r\n    }\r\n\r\n    //Current/next campaign revenue balance\r\n    function revenueBalance() external view returns(uint) {\r\n        if(active()){\r\n            return campaigns[lastCampaignID].total.balanceETH.wmul(campaigns[lastCampaignID].devFraction);\r\n        } else {\r\n            if(!campaigns[lastCampaignID].finalized) {\r\n                return campaigns[lastCampaignID].total.balanceETH.wmul(campaigns[lastCampaignID].devFraction)\r\n                    .wmul(campaigns[lastCampaignID].newCampaignFraction);\r\n            } else {\r\n                return nextCampaign.balanceETH.wmul(_devFraction);\r\n            }\r\n        }\r\n    }\r\n\r\n    /// The starting balance of the next campaign\r\n    function nextCampaignBalance() external view returns(uint) {        \r\n        if(!campaigns[lastCampaignID].finalized) {\r\n            return campaigns[lastCampaignID].total.balanceETH.wmul(campaigns[lastCampaignID].newCampaignFraction);\r\n        } else {\r\n            return nextCampaign.balanceETH.wmul(_devFraction);\r\n        }\r\n    }\r\n\r\n    /// Total cumulative presses for all campaigns\r\n    function totalPresses() external view returns(uint) {\r\n        if (!campaigns[lastCampaignID].finalized) {\r\n            return totalPresses.add(campaigns[lastCampaignID].presses);\r\n        } else {\r\n            return totalPresses;\r\n        }\r\n    }\r\n\r\n    /// Total cumulative charity for all campaigns\r\n    function totalCharity() external view returns(uint) {\r\n        if (!campaigns[lastCampaignID].finalized) {\r\n            return totalCharity.add(campaigns[lastCampaignID].total.balanceETH.wmul(campaigns[lastCampaignID].charityFraction));\r\n        } else {\r\n            return totalCharity;\r\n        }\r\n    }\r\n\r\n    /// Total cumulative revenue for all campaigns\r\n    function totalRevenue() external view returns(uint) {\r\n        if (!campaigns[lastCampaignID].finalized) {\r\n            return totalRevenue.add(campaigns[lastCampaignID].total.balanceETH.wmul(campaigns[lastCampaignID].devFraction));\r\n        } else {\r\n            return totalRevenue;\r\n        }\r\n    }\r\n\r\n    // /// Total won for all campaigns\r\n    // function totalWon() external view returns(uint) {\r\n    //     return totalWon;\r\n       \r\n    // }\r\n\r\n    /// Returns the balance of any winner\r\n    function hasWon(address _guy) external view returns(uint) {\r\n        return winners[_guy].balanceETH;\r\n    }\r\n\r\n    /// Functions for handling value\r\n\r\n    /// Withdrawal function for winners\r\n    function withdrawJackpot() public {\r\n        require(winners[msg.sender].balanceETH > 0, \"Nothing to withdraw!\");\r\n        sendETH(winners[msg.sender], msg.sender, winners[msg.sender].balanceETH);\r\n    }\r\n\r\n    /// Any winner can chose to donate their jackpot\r\n    function donateJackpot() public {\r\n        require(winners[msg.sender].balanceETH > 0, \"Nothing to donate!\");\r\n        transferETH(winners[msg.sender], charity, winners[msg.sender].balanceETH);\r\n    }\r\n\r\n    /// Dev revenue withdrawal function\r\n    function withdrawRevenue() public auth {\r\n        sendETH(revenue, owner, revenue.balanceETH);\r\n    }\r\n\r\n    /// Dev charity transfer function - sends all of the charity balance to the pre-set charity address\r\n    /// Note that there's nothing stopping the devs to wait and set the charity beneficiary to their own address\r\n    /// and drain the charity balance for themselves. We would not do that as it would not make sense and it would\r\n    /// damage our reputation, but this is the only \"weak\" spot of the contract where it requires trust in the devs\r\n    function sendCharityETH(bytes callData) public auth {\r\n        // donation receiver might be a contract, so transact instead of a simple send\r\n        transact(charity, charityBeneficiary, charity.balanceETH, callData);\r\n    }\r\n\r\n     /// This allows the owner to withdraw surplus ETH\r\n    function redeemSurplusETH() public auth {\r\n        uint surplus = address(this).balance.sub(totalETH);\r\n        balanceETH(base, surplus);\r\n        sendETH(base, msg.sender, base.balanceETH);\r\n    }\r\n\r\n    /// This allows the owner to withdraw surplus Tokens\r\n    function redeemSurplusERC20(address token) public auth {\r\n        uint realTokenBalance = ERC20(token).balanceOf(this);\r\n        uint surplus = realTokenBalance.sub(totalTokenBalances[token]);\r\n        balanceToken(base, token, surplus);\r\n        sendToken(base, token, msg.sender, base.tokenBalances[token]);\r\n    }\r\n\r\n    /// withdraw surplus ETH\r\n    function withdrawBaseETH() public auth {\r\n        sendETH(base, msg.sender, base.balanceETH);\r\n    }\r\n\r\n    /// withdraw surplus tokens\r\n    function withdrawBaseERC20(address token) public auth {\r\n        sendToken(base, token, msg.sender, base.tokenBalances[token]);\r\n    }\r\n\r\n    ///Setters\r\n\r\n    /// Set button parameters\r\n    function setButtonParams(uint startingPrice_, uint priceMul_, uint32 period_, uint32 n_) public \r\n    auth\r\n    limited(startingPrice_, 1 szabo, 10 ether) ///Parameters are limited\r\n    limited(priceMul_, ONE_WAD, 10 * ONE_WAD)\r\n    limited(period_, 30 seconds, 1 weeks)\r\n    {\r\n        startingPrice = startingPrice_;\r\n        _priceMultiplier = priceMul_;\r\n        _period = period_;\r\n        _n = n_;\r\n        emit ButtonParamsChanged(startingPrice_, n_, period_, priceMul_);\r\n    }\r\n\r\n    /// Fractions must add up to 100%, and can only be set every 2 weeks\r\n    function setAccountingParams(uint _devF, uint _charityF, uint _newCampF) public \r\n    auth\r\n    limited(_devF.add(_charityF).add(_newCampF), 0, ONE_WAD) // up to 100% - charity fraction could be set to 100% for special occasions\r\n    timeLimited(2 weeks) { // can only be changed once every 4 weeks\r\n        require(_charityF <= ONE_WAD); // charity fraction can be up to 100%\r\n        require(_devF <= 20 * ONE_PERCENT_WAD); //can't set the dev fraction to more than 20%\r\n        require(_newCampF <= 10 * ONE_PERCENT_WAD);//less than 10%\r\n        _devFraction = _devF;\r\n        _charityFraction = _charityF;\r\n        _newCampaignFraction = _newCampF;\r\n        _jackpotFraction = ONE_WAD.sub(_devF).sub(_charityF).sub(_newCampF);\r\n        emit AccountingParamsChanged(_devF, _charityF, _jackpotFraction);\r\n    }\r\n\r\n    ///Charity beneficiary can only be changed every 13 weeks\r\n    function setCharityBeneficiary(address _charity) public \r\n    auth\r\n    timeLimited(13 weeks) \r\n    {   \r\n        require(_charity != address(0));\r\n        charityBeneficiary = _charity;\r\n        emit CharityChanged(_charity);\r\n    }\r\n\r\n}\r\n\r\n/// Main contract with key logic\r\ncontract TheButton is ButtonBase {\r\n    \r\n    using DSMath for uint;\r\n\r\n    ///If the contract is stopped no new campaigns can be started, but any running campaing is not affected\r\n    bool public stopped;\r\n\r\n    constructor() public {\r\n        stopped = true;\r\n    }\r\n\r\n    /// Press logic\r\n    function press() public payable {\r\n        //the last campaign\r\n        ButtonCampaign storage c = campaigns[lastCampaignID];\r\n        if (active()) {// if active\r\n            _press(c);//register press\r\n            depositETH(c.total, msg.sender, msg.value);// handle ETH\r\n        } else { //if inactive (after deadline)\r\n            require(!stopped, \"Contract stopped!\");//make sure we're not stopped\r\n            if(!c.finalized) {//if not finalized\r\n                _finalizeCampaign(c);// finalize last campaign\r\n            } \r\n            _newCampaign();// start new campaign\r\n            c = campaigns[lastCampaignID];\r\n                    \r\n            _press(c);//resigter press\r\n            depositETH(c.total, msg.sender, msg.value);//handle ETH\r\n        } \r\n    }\r\n\r\n    function start() external payable auth {\r\n        require(stopped);\r\n        stopped = false;\r\n        \r\n        if(campaigns.length != 0) {//if there was a past campaign\r\n            ButtonCampaign storage c = campaigns[lastCampaignID];\r\n            require(c.finalized, \"Last campaign not finalized!\");//make sure it was finalized\r\n        }             \r\n        _newCampaign();//start new campaign\r\n        c = campaigns[lastCampaignID];\r\n        _press(c);\r\n        depositETH(c.total, msg.sender, msg.value);// deposit ETH        \r\n    }\r\n\r\n    ///Stopping will only affect new campaigns, not already running ones\r\n    function stop() external auth {\r\n        stopped = true;\r\n    }\r\n    \r\n    /// Anyone can finalize campaigns in case the devs stop the contract\r\n    function finalizeLastCampaign() external {\r\n        require(stopped);\r\n        ButtonCampaign storage c = campaigns[lastCampaignID];\r\n        _finalizeCampaign(c);\r\n    }\r\n\r\n    function finalizeCampaign(uint id) external {\r\n        require(stopped);\r\n        ButtonCampaign storage c = campaigns[id];\r\n        _finalizeCampaign(c);\r\n    }\r\n\r\n    //Press logic\r\n    function _press(ButtonCampaign storage c) internal {\r\n        require(c.deadline >= now, \"After deadline!\");//must be before the deadline\r\n        require(msg.value >= c.price, \"Not enough value!\");// must have at least the price value\r\n        c.presses += 1;//no need for safe math, as it is not a critical calculation\r\n        c.lastPresser = msg.sender;\r\n             \r\n        if(c.presses % c.n == 0) {// increase the price every n presses\r\n            c.price = c.price.wmul(c.priceMultiplier);\r\n        }           \r\n\r\n        emit Pressed(msg.sender, msg.value, c.deadline - uint64(now));\r\n        c.deadline = uint64(now.add(c.period)); // set the new deadline\r\n    }\r\n\r\n    /// starting a new campaign\r\n    function _newCampaign() internal {\r\n        require(!active(), \"A campaign is already running!\");\r\n        require(_devFraction.add(_charityFraction).add(_jackpotFraction).add(_newCampaignFraction) == ONE_WAD, \"Accounting is incorrect!\");\r\n        \r\n        uint _campaignID = campaigns.length++;\r\n        ButtonCampaign storage c = campaigns[_campaignID];\r\n        lastCampaignID = _campaignID;\r\n\r\n        c.price = startingPrice;\r\n        c.priceMultiplier = _priceMultiplier;\r\n        c.devFraction = _devFraction;\r\n        c.charityFraction = _charityFraction;\r\n        c.jackpotFraction = _jackpotFraction;\r\n        c.newCampaignFraction = _newCampaignFraction;\r\n        c.deadline = uint64(now.add(_period));\r\n        c.n = _n;\r\n        c.period = _period;\r\n        c.total.name = keccak256(abi.encodePacked(\"Total\", lastCampaignID));//setting the name of the campaign's accaount     \r\n        transferETH(nextCampaign, c.total, nextCampaign.balanceETH);\r\n        emit Started(c.total.balanceETH, _period, lastCampaignID); \r\n    }\r\n\r\n    /// Finalize campaign logic\r\n    function _finalizeCampaign(ButtonCampaign storage c) internal {\r\n        require(c.deadline < now, \"Before deadline!\");\r\n        require(!c.finalized, \"Already finalized!\");\r\n        \r\n        if(c.presses != 0) {//If there were presses\r\n            uint totalBalance = c.total.balanceETH;\r\n            //Handle all of the accounting            \r\n            transferETH(c.total, winners[c.lastPresser], totalBalance.wmul(c.jackpotFraction));\r\n            winners[c.lastPresser].name = bytes32(c.lastPresser);\r\n            totalWon = totalWon.add(totalBalance.wmul(c.jackpotFraction));\r\n\r\n            transferETH(c.total, revenue, totalBalance.wmul(c.devFraction));\r\n            totalRevenue = totalRevenue.add(totalBalance.wmul(c.devFraction));\r\n\r\n            transferETH(c.total, charity, totalBalance.wmul(c.charityFraction));\r\n            totalCharity = totalCharity.add(totalBalance.wmul(c.charityFraction));\r\n\r\n            //avoiding rounding errors - just transfer the leftover\r\n            // transferETH(c.total, nextCampaign, c.total.balanceETH);\r\n\r\n            totalPresses = totalPresses.add(c.presses);\r\n\r\n            emit Winrar(c.lastPresser, totalBalance.wmul(c.jackpotFraction));\r\n        } \r\n        // if there will be no next campaign\r\n        if(stopped) {\r\n            //transfer leftover to devs' base account\r\n            transferETH(c.total, base, c.total.balanceETH);\r\n        } else {\r\n            //otherwise transfer to next campaign\r\n            transferETH(c.total, nextCampaign, c.total.balanceETH);\r\n        }\r\n        c.finalized = true;\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\Paskal\\Documents\\The_Button\\thebutton\\contracts\\TheButton.sol",
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0xdffc821040ac850d3cdb1e8c2d587ab1312ed7267098abadf3fd9137172c51c8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "by",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "paid",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "timeLeft",
              "type": "uint64"
            }
          ],
          "name": "Pressed",
          "type": "event"
        },
        "0x6a2b8b9a3942a8abc58fb4ae0c546618d960d0bc856f995b545464becc5be272": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "startingETH",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "period",
              "type": "uint32"
            },
            {
              "indexed": false,
              "name": "i",
              "type": "uint256"
            }
          ],
          "name": "Started",
          "type": "event"
        },
        "0x56b84851a1cd72311b185b7510e0e8d5aa69f8755dcc43463ebfe959bb1614f8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "guy",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "jackpot",
              "type": "uint256"
            }
          ],
          "name": "Winrar",
          "type": "event"
        },
        "0xe9bff25f57a144aa43858ad7e8e92a992af00ce7a2704f116861b96000f457ec": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "newCharityBeneficiary",
              "type": "address"
            }
          ],
          "name": "CharityChanged",
          "type": "event"
        },
        "0xba0488b18639349657ed3fa0cacf2d3fd8352aad74cf78575306bca353568893": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "startingPrice",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "n",
              "type": "uint32"
            },
            {
              "indexed": false,
              "name": "period",
              "type": "uint32"
            },
            {
              "indexed": false,
              "name": "priceMul",
              "type": "uint256"
            }
          ],
          "name": "ButtonParamsChanged",
          "type": "event"
        },
        "0x0b22d042ca4d52f7ed18250a188ec6ea8d8be78595e40514596b8d768e456468": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "devFraction",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "charityFraction",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "jackpotFraction",
              "type": "uint256"
            }
          ],
          "name": "AccountingParamsChanged",
          "type": "event"
        },
        "0x8534743902a2fb19639aba9d7882a1a9b06d7a841874192da0738ce3973db0ae": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "ETHDeposited",
          "type": "event"
        },
        "0xa3e8292cffffe79590527099bf9d852a1160f38b284cc5124afa894201c0f256": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "ETHSent",
          "type": "event"
        },
        "0x91394ae08f7d57415c1c2ac6886394ef2c7634274779088733b60f7504831cef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "fromAccount",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "toAccount",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "ETHTransferred",
          "type": "event"
        },
        "0x254d6417ac9a49d8b1c3aca33e7dabcb686e0004f5a0d6d84e3bc4537dd7595a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "fromAccount",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "toAccount",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "token",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TokenTransferred",
          "type": "event"
        },
        "0x528fa5ea862bde3887a0891407d0cc4cbe935d1dd428a0fda5624c0a256facc8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "token",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TokenDeposited",
          "type": "event"
        },
        "0x920718295e8e03a7fda1fe1d8d41ba008f378b1d679ea1a5f70eca3a389a2578": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "name": "token",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TokenSent",
          "type": "event"
        },
        "0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "authority",
              "type": "address"
            }
          ],
          "name": "LogSetAuthority",
          "type": "event"
        },
        "0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "LogSetOwner",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x0F4AA2957a536D18562d227f06558938C87717CB",
      "transactionHash": "0x70e9bd22c9e151528890292f1da1cd29c0bcfc14e3ee15cccfe088118e88e77a"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-07-13T08:21:23.758Z"
}